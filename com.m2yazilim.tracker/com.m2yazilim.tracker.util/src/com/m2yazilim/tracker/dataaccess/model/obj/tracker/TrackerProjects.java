package com.m2yazilim.tracker.dataaccess.model.obj.tracker;

import com.felees.hbnpojogen.persistence.IPojoGenEntity;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerAdminRequests;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerGroups;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerListCategory;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerListOs;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerListResolution;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerListStatus;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerListTasktype;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerListVersion;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerTasks;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.iface.ITrackerProjects;
import java.io.Serializable;
import java.util.Collections;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.WeakHashMap;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.proxy.HibernateProxy;


/** 
 * Object mapping for hibernate-handled table: tracker_projects.
 * @author autogenerated
 */

@Entity
@Table(name = "tracker_projects", catalog = "tracker")
public class TrackerProjects implements Cloneable, Serializable, IPojoGenEntity, ITrackerProjects {

	/** Serial Version UID. */
	private static final long serialVersionUID = -558981841L;

	/** Use a WeakHashMap so entries will be garbage collected once all entities 
		referring to a saved hash are garbage collected themselves. */
	private static final Map<Serializable, Integer> SAVED_HASHES =
		Collections.synchronizedMap(new WeakHashMap<Serializable, Integer>());
	
	/** hashCode temporary storage. */
	private volatile Integer hashCode;
	

	/** Field mapping. */
	private Integer anonOpen;
	/** Field mapping. */
	private Integer autoAssign;
	/** Field mapping. */
	private Integer commentClosed;
	/** Field mapping. */
	private TrackerUsers defaultCatOwner;
	/** Field mapping. */
	private String defaultEntry;
	/** Field mapping. */
	private String defaultTask;
	/** Field mapping. */
	private String feedDescription;
	/** Field mapping. */
	private String feedImgUrl;
	/** Field mapping. */
	private Integer id = 0; // init for hibernate bug workaround
	/** Field mapping. */
	private String introMessage;
	/** Field mapping. */
	private String langCode;
	/** Field mapping. */
	private Integer lastUpdated;
	/** Field mapping. */
	private String notifyEmail;
	/** Field mapping. */
	private String notifyJabber;
	/** Field mapping. */
	private String notifyReply;
	/** Field mapping. */
	private String notifySubject;
	/** Field mapping. */
	private String notifyTypes;
	/** Field mapping. */
	private Integer othersView;
	/** Field mapping. */
	private Integer projectIsActive;
	/** Field mapping. */
	private String projectTitle;
	/** Field mapping. */
	private String themeStyle;
	/** Field mapping. */
	private Set<TrackerAdminRequests> trackerAdminRequestss = new HashSet<TrackerAdminRequests>();

	/** Field mapping. */
	private Set<TrackerGroups> trackerGroupss = new HashSet<TrackerGroups>();

	/** Field mapping. */
	private Set<TrackerListCategory> trackerListCategories = new HashSet<TrackerListCategory>();

	/** Field mapping. */
	private Set<TrackerListOs> trackerListOss = new HashSet<TrackerListOs>();

	/** Field mapping. */
	private Set<TrackerListResolution> trackerListResolutions = new HashSet<TrackerListResolution>();

	/** Field mapping. */
	private Set<TrackerListStatus> trackerListStatuses = new HashSet<TrackerListStatus>();

	/** Field mapping. */
	private Set<TrackerListTasktype> trackerListTasktypes = new HashSet<TrackerListTasktype>();

	/** Field mapping. */
	private Set<TrackerListVersion> trackerListVersions = new HashSet<TrackerListVersion>();

	/** Field mapping. */
	private Set<TrackerTasks> trackerTaskss = new HashSet<TrackerTasks>();

	/** Field mapping. */
	private Integer version;
	/** Field mapping. */
	private String visibleColumns;
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public TrackerProjects() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public TrackerProjects(Integer id) {
		this.id = id;
	}
	
	/** Constructor taking a given ID.
	 * @param anonOpen Integer object;
	 * @param autoAssign Integer object;
	 * @param commentClosed Integer object;
	 * @param defaultCatOwner TrackerUsers object;
	 * @param defaultEntry String object;
	 * @param id Integer object;
	 * @param langCode String object;
	 * @param lastUpdated Integer object;
	 * @param notifySubject String object;
	 * @param notifyTypes String object;
	 * @param othersView Integer object;
	 * @param projectIsActive Integer object;
	 * @param projectTitle String object;
	 * @param themeStyle String object;
	 * @param version Integer object;
	 * @param visibleColumns String object;
	 */
	public TrackerProjects(Integer anonOpen, Integer autoAssign, Integer commentClosed, 					
			TrackerUsers defaultCatOwner, String defaultEntry, Integer id, 					
			String langCode, Integer lastUpdated, String notifySubject, 					
			String notifyTypes, Integer othersView, Integer projectIsActive, 					
			String projectTitle, String themeStyle, Integer version, 					
			String visibleColumns) {

		this.anonOpen = anonOpen;
		this.autoAssign = autoAssign;
		this.commentClosed = commentClosed;
		this.defaultCatOwner = defaultCatOwner;
		this.defaultEntry = defaultEntry;
		this.id = id;
		this.langCode = langCode;
		this.lastUpdated = lastUpdated;
		this.notifySubject = notifySubject;
		this.notifyTypes = notifyTypes;
		this.othersView = othersView;
		this.projectIsActive = projectIsActive;
		this.projectTitle = projectTitle;
		this.themeStyle = themeStyle;
		this.version = version;
		this.visibleColumns = visibleColumns;
	}
	
 


 
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return TrackerProjects.class;
	}
 

    /**
     * Return the value associated with the column: anonOpen.
	 * @return A Integer object (this.anonOpen)
	 */
	@Basic( optional = false )
	@Column( name = "anon_open", nullable = false  )
	public Integer getAnonOpen() {
		return this.anonOpen;
		
	}
	

  
    /**  
     * Set the value related to the column: anonOpen.
	 * @param anonOpen the anonOpen value you wish to set
	 */
	public void setAnonOpen(final Integer anonOpen) {
		this.anonOpen = anonOpen;
	}

    /**
     * Return the value associated with the column: autoAssign.
	 * @return A Integer object (this.autoAssign)
	 */
	@Basic( optional = false )
	@Column( name = "auto_assign", nullable = false  )
	public Integer getAutoAssign() {
		return this.autoAssign;
		
	}
	

  
    /**  
     * Set the value related to the column: autoAssign.
	 * @param autoAssign the autoAssign value you wish to set
	 */
	public void setAutoAssign(final Integer autoAssign) {
		this.autoAssign = autoAssign;
	}

    /**
     * Return the value associated with the column: commentClosed.
	 * @return A Integer object (this.commentClosed)
	 */
	@Basic( optional = false )
	@Column( name = "comment_closed", nullable = false  )
	public Integer getCommentClosed() {
		return this.commentClosed;
		
	}
	

  
    /**  
     * Set the value related to the column: commentClosed.
	 * @param commentClosed the commentClosed value you wish to set
	 */
	public void setCommentClosed(final Integer commentClosed) {
		this.commentClosed = commentClosed;
	}

    /**
     * Return the value associated with the column: defaultCatOwner.
	 * @return A TrackerUsers object (this.defaultCatOwner)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "default_cat_owner", nullable = false )
	public TrackerUsers getDefaultCatOwner() {
		return this.defaultCatOwner;
		
	}
	

  
    /**  
     * Set the value related to the column: defaultCatOwner.
	 * @param defaultCatOwner the defaultCatOwner value you wish to set
	 */
	public void setDefaultCatOwner(final TrackerUsers defaultCatOwner) {
		this.defaultCatOwner = defaultCatOwner;
	}

    /**
     * Return the value associated with the column: defaultEntry.
	 * @return A String object (this.defaultEntry)
	 */
	@Basic( optional = false )
	@Column( name = "default_entry", nullable = false, length = 8  )
	public String getDefaultEntry() {
		return this.defaultEntry;
		
	}
	

  
    /**  
     * Set the value related to the column: defaultEntry.
	 * @param defaultEntry the defaultEntry value you wish to set
	 */
	public void setDefaultEntry(final String defaultEntry) {
		this.defaultEntry = defaultEntry;
	}

    /**
     * Return the value associated with the column: defaultTask.
	 * @return A String object (this.defaultTask)
	 */
	@Basic( optional = true )
	@Column( name = "default_task", length = 21845  )
	public String getDefaultTask() {
		return this.defaultTask;
		
	}
	

  
    /**  
     * Set the value related to the column: defaultTask.
	 * @param defaultTask the defaultTask value you wish to set
	 */
	public void setDefaultTask(final String defaultTask) {
		this.defaultTask = defaultTask;
	}

    /**
     * Return the value associated with the column: feedDescription.
	 * @return A String object (this.feedDescription)
	 */
	@Basic( optional = true )
	@Column( name = "feed_description", length = 21845  )
	public String getFeedDescription() {
		return this.feedDescription;
		
	}
	

  
    /**  
     * Set the value related to the column: feedDescription.
	 * @param feedDescription the feedDescription value you wish to set
	 */
	public void setFeedDescription(final String feedDescription) {
		this.feedDescription = feedDescription;
	}

    /**
     * Return the value associated with the column: feedImgUrl.
	 * @return A String object (this.feedImgUrl)
	 */
	@Basic( optional = true )
	@Column( name = "feed_img_url", length = 21845  )
	public String getFeedImgUrl() {
		return this.feedImgUrl;
		
	}
	

  
    /**  
     * Set the value related to the column: feedImgUrl.
	 * @param feedImgUrl the feedImgUrl value you wish to set
	 */
	public void setFeedImgUrl(final String feedImgUrl) {
		this.feedImgUrl = feedImgUrl;
	}

    /**
     * Return the value associated with the column: id.
	 * @return A Integer object (this.id)
	 */
    @Id 
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Basic( optional = false )
	@Column( name = "project_id", nullable = false  )
	public Integer getId() {
		return this.id;
		
	}
	

  
    /**  
     * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final Integer id) {
		// If we've just been persisted and hashCode has been
		// returned then make sure other entities with this
		// ID return the already returned hash code
		if ( (this.id == null || this.id == 0) &&
				(id != null) &&
				(this.hashCode != null) ) {
		SAVED_HASHES.put( id, this.hashCode );
		}
		this.id = id;
	}

    /**
     * Return the value associated with the column: introMessage.
	 * @return A String object (this.introMessage)
	 */
	@Basic( optional = true )
	@Column( name = "intro_message", length = 21845  )
	public String getIntroMessage() {
		return this.introMessage;
		
	}
	

  
    /**  
     * Set the value related to the column: introMessage.
	 * @param introMessage the introMessage value you wish to set
	 */
	public void setIntroMessage(final String introMessage) {
		this.introMessage = introMessage;
	}

    /**
     * Return the value associated with the column: langCode.
	 * @return A String object (this.langCode)
	 */
	@Basic( optional = false )
	@Column( name = "lang_code", nullable = false, length = 10  )
	public String getLangCode() {
		return this.langCode;
		
	}
	

  
    /**  
     * Set the value related to the column: langCode.
	 * @param langCode the langCode value you wish to set
	 */
	public void setLangCode(final String langCode) {
		this.langCode = langCode;
	}

    /**
     * Return the value associated with the column: lastUpdated.
	 * @return A Integer object (this.lastUpdated)
	 */
	@Basic( optional = false )
	@Column( name = "last_updated", nullable = false  )
	public Integer getLastUpdated() {
		return this.lastUpdated;
		
	}
	

  
    /**  
     * Set the value related to the column: lastUpdated.
	 * @param lastUpdated the lastUpdated value you wish to set
	 */
	public void setLastUpdated(final Integer lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

    /**
     * Return the value associated with the column: notifyEmail.
	 * @return A String object (this.notifyEmail)
	 */
	@Basic( optional = true )
	@Column( name = "notify_email", length = 21845  )
	public String getNotifyEmail() {
		return this.notifyEmail;
		
	}
	

  
    /**  
     * Set the value related to the column: notifyEmail.
	 * @param notifyEmail the notifyEmail value you wish to set
	 */
	public void setNotifyEmail(final String notifyEmail) {
		this.notifyEmail = notifyEmail;
	}

    /**
     * Return the value associated with the column: notifyJabber.
	 * @return A String object (this.notifyJabber)
	 */
	@Basic( optional = true )
	@Column( name = "notify_jabber", length = 21845  )
	public String getNotifyJabber() {
		return this.notifyJabber;
		
	}
	

  
    /**  
     * Set the value related to the column: notifyJabber.
	 * @param notifyJabber the notifyJabber value you wish to set
	 */
	public void setNotifyJabber(final String notifyJabber) {
		this.notifyJabber = notifyJabber;
	}

    /**
     * Return the value associated with the column: notifyReply.
	 * @return A String object (this.notifyReply)
	 */
	@Basic( optional = true )
	@Column( name = "notify_reply", length = 21845  )
	public String getNotifyReply() {
		return this.notifyReply;
		
	}
	

  
    /**  
     * Set the value related to the column: notifyReply.
	 * @param notifyReply the notifyReply value you wish to set
	 */
	public void setNotifyReply(final String notifyReply) {
		this.notifyReply = notifyReply;
	}

    /**
     * Return the value associated with the column: notifySubject.
	 * @return A String object (this.notifySubject)
	 */
	@Basic( optional = false )
	@Column( name = "notify_subject", nullable = false, length = 100  )
	public String getNotifySubject() {
		return this.notifySubject;
		
	}
	

  
    /**  
     * Set the value related to the column: notifySubject.
	 * @param notifySubject the notifySubject value you wish to set
	 */
	public void setNotifySubject(final String notifySubject) {
		this.notifySubject = notifySubject;
	}

    /**
     * Return the value associated with the column: notifyTypes.
	 * @return A String object (this.notifyTypes)
	 */
	@Basic( optional = false )
	@Column( name = "notify_types", nullable = false, length = 100  )
	public String getNotifyTypes() {
		return this.notifyTypes;
		
	}
	

  
    /**  
     * Set the value related to the column: notifyTypes.
	 * @param notifyTypes the notifyTypes value you wish to set
	 */
	public void setNotifyTypes(final String notifyTypes) {
		this.notifyTypes = notifyTypes;
	}

    /**
     * Return the value associated with the column: othersView.
	 * @return A Integer object (this.othersView)
	 */
	@Basic( optional = false )
	@Column( name = "others_view", nullable = false  )
	public Integer getOthersView() {
		return this.othersView;
		
	}
	

  
    /**  
     * Set the value related to the column: othersView.
	 * @param othersView the othersView value you wish to set
	 */
	public void setOthersView(final Integer othersView) {
		this.othersView = othersView;
	}

    /**
     * Return the value associated with the column: projectIsActive.
	 * @return A Integer object (this.projectIsActive)
	 */
	@Basic( optional = false )
	@Column( name = "project_is_active", nullable = false  )
	public Integer getProjectIsActive() {
		return this.projectIsActive;
		
	}
	

  
    /**  
     * Set the value related to the column: projectIsActive.
	 * @param projectIsActive the projectIsActive value you wish to set
	 */
	public void setProjectIsActive(final Integer projectIsActive) {
		this.projectIsActive = projectIsActive;
	}

    /**
     * Return the value associated with the column: projectTitle.
	 * @return A String object (this.projectTitle)
	 */
	@Basic( optional = false )
	@Column( name = "project_title", nullable = false, length = 100  )
	public String getProjectTitle() {
		return this.projectTitle;
		
	}
	

  
    /**  
     * Set the value related to the column: projectTitle.
	 * @param projectTitle the projectTitle value you wish to set
	 */
	public void setProjectTitle(final String projectTitle) {
		this.projectTitle = projectTitle;
	}

    /**
     * Return the value associated with the column: themeStyle.
	 * @return A String object (this.themeStyle)
	 */
	@Basic( optional = false )
	@Column( name = "theme_style", nullable = false, length = 20  )
	public String getThemeStyle() {
		return this.themeStyle;
		
	}
	

  
    /**  
     * Set the value related to the column: themeStyle.
	 * @param themeStyle the themeStyle value you wish to set
	 */
	public void setThemeStyle(final String themeStyle) {
		this.themeStyle = themeStyle;
	}

    /**
     * Return the value associated with the column: trackerAdminRequests.
	 * @return A Set&lt;TrackerAdminRequests&gt; object (this.trackerAdminRequests)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "project"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "project_id", nullable = false  )
	public Set<TrackerAdminRequests> getTrackerAdminRequestss() {
		return this.trackerAdminRequestss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerAdminRequests to the trackerAdminRequestss set.
	 * @param trackerAdminRequests item to add
	 */
	public void addTrackerAdminRequests(TrackerAdminRequests trackerAdminRequests) {
		trackerAdminRequests.setProject(this);
		this.trackerAdminRequestss.add(trackerAdminRequests);
	}

  
    /**  
     * Set the value related to the column: trackerAdminRequests.
	 * @param trackerAdminRequests the trackerAdminRequests value you wish to set
	 */
	public void setTrackerAdminRequestss(final Set<TrackerAdminRequests> trackerAdminRequests) {
		this.trackerAdminRequestss = trackerAdminRequests;
	}

    /**
     * Return the value associated with the column: trackerGroups.
	 * @return A Set&lt;TrackerGroups&gt; object (this.trackerGroups)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "project"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "project_id", nullable = false  )
	public Set<TrackerGroups> getTrackerGroupss() {
		return this.trackerGroupss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerGroups to the trackerGroupss set.
	 * @param trackerGroups item to add
	 */
	public void addTrackerGroups(TrackerGroups trackerGroups) {
		trackerGroups.setProject(this);
		this.trackerGroupss.add(trackerGroups);
	}

  
    /**  
     * Set the value related to the column: trackerGroups.
	 * @param trackerGroups the trackerGroups value you wish to set
	 */
	public void setTrackerGroupss(final Set<TrackerGroups> trackerGroups) {
		this.trackerGroupss = trackerGroups;
	}

    /**
     * Return the value associated with the column: trackerListCategory.
	 * @return A Set&lt;TrackerListCategory&gt; object (this.trackerListCategory)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "project"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "project_id", nullable = false  )
	public Set<TrackerListCategory> getTrackerListCategories() {
		return this.trackerListCategories;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerListCategory to the trackerListCategories set.
	 * @param trackerListCategory item to add
	 */
	public void addTrackerListCategory(TrackerListCategory trackerListCategory) {
		trackerListCategory.setProject(this);
		this.trackerListCategories.add(trackerListCategory);
	}

  
    /**  
     * Set the value related to the column: trackerListCategory.
	 * @param trackerListCategory the trackerListCategory value you wish to set
	 */
	public void setTrackerListCategories(final Set<TrackerListCategory> trackerListCategory) {
		this.trackerListCategories = trackerListCategory;
	}

    /**
     * Return the value associated with the column: trackerListOs.
	 * @return A Set&lt;TrackerListOs&gt; object (this.trackerListOs)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "project"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "project_id", nullable = false  )
	public Set<TrackerListOs> getTrackerListOss() {
		return this.trackerListOss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerListOs to the trackerListOss set.
	 * @param trackerListOs item to add
	 */
	public void addTrackerListOs(TrackerListOs trackerListOs) {
		trackerListOs.setProject(this);
		this.trackerListOss.add(trackerListOs);
	}

  
    /**  
     * Set the value related to the column: trackerListOs.
	 * @param trackerListOs the trackerListOs value you wish to set
	 */
	public void setTrackerListOss(final Set<TrackerListOs> trackerListOs) {
		this.trackerListOss = trackerListOs;
	}

    /**
     * Return the value associated with the column: trackerListResolution.
	 * @return A Set&lt;TrackerListResolution&gt; object (this.trackerListResolution)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "project"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "project_id", nullable = false  )
	public Set<TrackerListResolution> getTrackerListResolutions() {
		return this.trackerListResolutions;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerListResolution to the trackerListResolutions set.
	 * @param trackerListResolution item to add
	 */
	public void addTrackerListResolution(TrackerListResolution trackerListResolution) {
		trackerListResolution.setProject(this);
		this.trackerListResolutions.add(trackerListResolution);
	}

  
    /**  
     * Set the value related to the column: trackerListResolution.
	 * @param trackerListResolution the trackerListResolution value you wish to set
	 */
	public void setTrackerListResolutions(final Set<TrackerListResolution> trackerListResolution) {
		this.trackerListResolutions = trackerListResolution;
	}

    /**
     * Return the value associated with the column: trackerListStatus.
	 * @return A Set&lt;TrackerListStatus&gt; object (this.trackerListStatus)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "project"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "project_id", nullable = false  )
	public Set<TrackerListStatus> getTrackerListStatuses() {
		return this.trackerListStatuses;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerListStatus to the trackerListStatuses set.
	 * @param trackerListStatus item to add
	 */
	public void addTrackerListStatus(TrackerListStatus trackerListStatus) {
		trackerListStatus.setProject(this);
		this.trackerListStatuses.add(trackerListStatus);
	}

  
    /**  
     * Set the value related to the column: trackerListStatus.
	 * @param trackerListStatus the trackerListStatus value you wish to set
	 */
	public void setTrackerListStatuses(final Set<TrackerListStatus> trackerListStatus) {
		this.trackerListStatuses = trackerListStatus;
	}

    /**
     * Return the value associated with the column: trackerListTasktype.
	 * @return A Set&lt;TrackerListTasktype&gt; object (this.trackerListTasktype)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "project"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "project_id", nullable = false  )
	public Set<TrackerListTasktype> getTrackerListTasktypes() {
		return this.trackerListTasktypes;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerListTasktype to the trackerListTasktypes set.
	 * @param trackerListTasktype item to add
	 */
	public void addTrackerListTasktype(TrackerListTasktype trackerListTasktype) {
		trackerListTasktype.setProject(this);
		this.trackerListTasktypes.add(trackerListTasktype);
	}

  
    /**  
     * Set the value related to the column: trackerListTasktype.
	 * @param trackerListTasktype the trackerListTasktype value you wish to set
	 */
	public void setTrackerListTasktypes(final Set<TrackerListTasktype> trackerListTasktype) {
		this.trackerListTasktypes = trackerListTasktype;
	}

    /**
     * Return the value associated with the column: trackerListVersion.
	 * @return A Set&lt;TrackerListVersion&gt; object (this.trackerListVersion)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "project"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "project_id", nullable = false  )
	public Set<TrackerListVersion> getTrackerListVersions() {
		return this.trackerListVersions;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerListVersion to the trackerListVersions set.
	 * @param trackerListVersion item to add
	 */
	public void addTrackerListVersion(TrackerListVersion trackerListVersion) {
		trackerListVersion.setProject(this);
		this.trackerListVersions.add(trackerListVersion);
	}

  
    /**  
     * Set the value related to the column: trackerListVersion.
	 * @param trackerListVersion the trackerListVersion value you wish to set
	 */
	public void setTrackerListVersions(final Set<TrackerListVersion> trackerListVersion) {
		this.trackerListVersions = trackerListVersion;
	}

    /**
     * Return the value associated with the column: trackerTasks.
	 * @return A Set&lt;TrackerTasks&gt; object (this.trackerTasks)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "project"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "project_id", nullable = false  )
	public Set<TrackerTasks> getTrackerTaskss() {
		return this.trackerTaskss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerTasks to the trackerTaskss set.
	 * @param trackerTasks item to add
	 */
	public void addTrackerTasks(TrackerTasks trackerTasks) {
		trackerTasks.setProject(this);
		this.trackerTaskss.add(trackerTasks);
	}

  
    /**  
     * Set the value related to the column: trackerTasks.
	 * @param trackerTasks the trackerTasks value you wish to set
	 */
	public void setTrackerTaskss(final Set<TrackerTasks> trackerTasks) {
		this.trackerTaskss = trackerTasks;
	}

    /**
     * Return the value associated with the column: version.
	 * @return A Integer object (this.version)
	 */
	@Basic( optional = false )
	@Column( nullable = false  )
	public Integer getVersion() {
		return this.version;
		
	}
	

  
    /**  
     * Set the value related to the column: version.
	 * @param version the version value you wish to set
	 */
	public void setVersion(final Integer version) {
		this.version = version;
	}

    /**
     * Return the value associated with the column: visibleColumns.
	 * @return A String object (this.visibleColumns)
	 */
	@Basic( optional = false )
	@Column( name = "visible_columns", nullable = false, length = 255  )
	public String getVisibleColumns() {
		return this.visibleColumns;
		
	}
	

  
    /**  
     * Set the value related to the column: visibleColumns.
	 * @param visibleColumns the visibleColumns value you wish to set
	 */
	public void setVisibleColumns(final String visibleColumns) {
		this.visibleColumns = visibleColumns;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public TrackerProjects clone() throws CloneNotSupportedException {
		
        final TrackerProjects copy = (TrackerProjects)super.clone();

		copy.setAnonOpen(this.getAnonOpen());
		copy.setAutoAssign(this.getAutoAssign());
		copy.setCommentClosed(this.getCommentClosed());
		copy.setDefaultCatOwner(this.getDefaultCatOwner());
		copy.setDefaultEntry(this.getDefaultEntry());
		copy.setDefaultTask(this.getDefaultTask());
		copy.setFeedDescription(this.getFeedDescription());
		copy.setFeedImgUrl(this.getFeedImgUrl());
		copy.setId(this.getId());
		copy.setIntroMessage(this.getIntroMessage());
		copy.setLangCode(this.getLangCode());
		copy.setLastUpdated(this.getLastUpdated());
		copy.setNotifyEmail(this.getNotifyEmail());
		copy.setNotifyJabber(this.getNotifyJabber());
		copy.setNotifyReply(this.getNotifyReply());
		copy.setNotifySubject(this.getNotifySubject());
		copy.setNotifyTypes(this.getNotifyTypes());
		copy.setOthersView(this.getOthersView());
		copy.setProjectIsActive(this.getProjectIsActive());
		copy.setProjectTitle(this.getProjectTitle());
		copy.setThemeStyle(this.getThemeStyle());
		if (this.getTrackerAdminRequestss() != null) {
			copy.getTrackerAdminRequestss().addAll(this.getTrackerAdminRequestss());
		}
		if (this.getTrackerGroupss() != null) {
			copy.getTrackerGroupss().addAll(this.getTrackerGroupss());
		}
		if (this.getTrackerListCategories() != null) {
			copy.getTrackerListCategories().addAll(this.getTrackerListCategories());
		}
		if (this.getTrackerListOss() != null) {
			copy.getTrackerListOss().addAll(this.getTrackerListOss());
		}
		if (this.getTrackerListResolutions() != null) {
			copy.getTrackerListResolutions().addAll(this.getTrackerListResolutions());
		}
		if (this.getTrackerListStatuses() != null) {
			copy.getTrackerListStatuses().addAll(this.getTrackerListStatuses());
		}
		if (this.getTrackerListTasktypes() != null) {
			copy.getTrackerListTasktypes().addAll(this.getTrackerListTasktypes());
		}
		if (this.getTrackerListVersions() != null) {
			copy.getTrackerListVersions().addAll(this.getTrackerListVersions());
		}
		if (this.getTrackerTaskss() != null) {
			copy.getTrackerTaskss().addAll(this.getTrackerTaskss());
		}
		copy.setVersion(this.getVersion());
		copy.setVisibleColumns(this.getVisibleColumns());
		return copy;
	}
	


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("anonOpen: " + this.getAnonOpen() + ", ");
		sb.append("autoAssign: " + this.getAutoAssign() + ", ");
		sb.append("commentClosed: " + this.getCommentClosed() + ", ");
		sb.append("defaultEntry: " + this.getDefaultEntry() + ", ");
		sb.append("defaultTask: " + this.getDefaultTask() + ", ");
		sb.append("feedDescription: " + this.getFeedDescription() + ", ");
		sb.append("feedImgUrl: " + this.getFeedImgUrl() + ", ");
		sb.append("id: " + this.getId() + ", ");
		sb.append("introMessage: " + this.getIntroMessage() + ", ");
		sb.append("langCode: " + this.getLangCode() + ", ");
		sb.append("lastUpdated: " + this.getLastUpdated() + ", ");
		sb.append("notifyEmail: " + this.getNotifyEmail() + ", ");
		sb.append("notifyJabber: " + this.getNotifyJabber() + ", ");
		sb.append("notifyReply: " + this.getNotifyReply() + ", ");
		sb.append("notifySubject: " + this.getNotifySubject() + ", ");
		sb.append("notifyTypes: " + this.getNotifyTypes() + ", ");
		sb.append("othersView: " + this.getOthersView() + ", ");
		sb.append("projectIsActive: " + this.getProjectIsActive() + ", ");
		sb.append("projectTitle: " + this.getProjectTitle() + ", ");
		sb.append("themeStyle: " + this.getThemeStyle() + ", ");
		sb.append("version: " + this.getVersion() + ", ");
		sb.append("visibleColumns: " + this.getVisibleColumns());
		return sb.toString();		
	}


	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		Object proxyThat = aThat;
		
		if ( this == aThat ) {
			 return true;
		}

		
		if (aThat instanceof HibernateProxy) {
 			// narrow down the proxy to the class we are dealing with.
 			try {
				proxyThat = ((HibernateProxy) aThat).getHibernateLazyInitializer().getImplementation(); 
			} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		   	}
		}
		if (aThat == null)  {
			 return false;
		}
		
		final TrackerProjects that; 
		try {
			that = (TrackerProjects) proxyThat;
			if ( !(that.getClassType().equals(this.getClassType()))){
				return false;
			}
		} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		} catch (ClassCastException e) {
				return false;
		}
		
		
		boolean result = true;
		result = result && (((this.getId() == null) && ( that.getId() == null)) || (this.getId() != null  && this.getId().equals(that.getId())));
		result = result && (((getAnonOpen() == null) && (that.getAnonOpen() == null)) || (getAnonOpen() != null && getAnonOpen().equals(that.getAnonOpen())));
		result = result && (((getAutoAssign() == null) && (that.getAutoAssign() == null)) || (getAutoAssign() != null && getAutoAssign().equals(that.getAutoAssign())));
		result = result && (((getCommentClosed() == null) && (that.getCommentClosed() == null)) || (getCommentClosed() != null && getCommentClosed().equals(that.getCommentClosed())));
		result = result && (((getDefaultCatOwner() == null) && (that.getDefaultCatOwner() == null)) || (getDefaultCatOwner() != null && getDefaultCatOwner().getId().equals(that.getDefaultCatOwner().getId())));	
		result = result && (((getDefaultEntry() == null) && (that.getDefaultEntry() == null)) || (getDefaultEntry() != null && getDefaultEntry().equals(that.getDefaultEntry())));
		result = result && (((getDefaultTask() == null) && (that.getDefaultTask() == null)) || (getDefaultTask() != null && getDefaultTask().equals(that.getDefaultTask())));
		result = result && (((getFeedDescription() == null) && (that.getFeedDescription() == null)) || (getFeedDescription() != null && getFeedDescription().equals(that.getFeedDescription())));
		result = result && (((getFeedImgUrl() == null) && (that.getFeedImgUrl() == null)) || (getFeedImgUrl() != null && getFeedImgUrl().equals(that.getFeedImgUrl())));
		result = result && (((getIntroMessage() == null) && (that.getIntroMessage() == null)) || (getIntroMessage() != null && getIntroMessage().equals(that.getIntroMessage())));
		result = result && (((getLangCode() == null) && (that.getLangCode() == null)) || (getLangCode() != null && getLangCode().equals(that.getLangCode())));
		result = result && (((getLastUpdated() == null) && (that.getLastUpdated() == null)) || (getLastUpdated() != null && getLastUpdated().equals(that.getLastUpdated())));
		result = result && (((getNotifyEmail() == null) && (that.getNotifyEmail() == null)) || (getNotifyEmail() != null && getNotifyEmail().equals(that.getNotifyEmail())));
		result = result && (((getNotifyJabber() == null) && (that.getNotifyJabber() == null)) || (getNotifyJabber() != null && getNotifyJabber().equals(that.getNotifyJabber())));
		result = result && (((getNotifyReply() == null) && (that.getNotifyReply() == null)) || (getNotifyReply() != null && getNotifyReply().equals(that.getNotifyReply())));
		result = result && (((getNotifySubject() == null) && (that.getNotifySubject() == null)) || (getNotifySubject() != null && getNotifySubject().equals(that.getNotifySubject())));
		result = result && (((getNotifyTypes() == null) && (that.getNotifyTypes() == null)) || (getNotifyTypes() != null && getNotifyTypes().equals(that.getNotifyTypes())));
		result = result && (((getOthersView() == null) && (that.getOthersView() == null)) || (getOthersView() != null && getOthersView().equals(that.getOthersView())));
		result = result && (((getProjectIsActive() == null) && (that.getProjectIsActive() == null)) || (getProjectIsActive() != null && getProjectIsActive().equals(that.getProjectIsActive())));
		result = result && (((getProjectTitle() == null) && (that.getProjectTitle() == null)) || (getProjectTitle() != null && getProjectTitle().equals(that.getProjectTitle())));
		result = result && (((getThemeStyle() == null) && (that.getThemeStyle() == null)) || (getThemeStyle() != null && getThemeStyle().equals(that.getThemeStyle())));
		result = result && (((getVersion() == null) && (that.getVersion() == null)) || (getVersion() != null && getVersion().equals(that.getVersion())));
		result = result && (((getVisibleColumns() == null) && (that.getVisibleColumns() == null)) || (getVisibleColumns() != null && getVisibleColumns().equals(that.getVisibleColumns())));
		return result;
	}
	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		if ( this.hashCode == null ) {
			synchronized ( this ) {
				if ( this.hashCode == null ) {
					Integer newHashCode = null;

					if ( getId() != null ) {
					newHashCode = SAVED_HASHES.get( getId() );
					}
					
					if ( newHashCode == null ) {
						if ( getId() != null && getId() != 0) {
							newHashCode = getId();
						} else {

						}
					}
					
					this.hashCode = newHashCode;
				}
			}
		}
	return this.hashCode;
	}
	

	
}
