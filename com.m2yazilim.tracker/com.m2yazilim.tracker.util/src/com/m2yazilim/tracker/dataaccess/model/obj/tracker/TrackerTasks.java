package com.m2yazilim.tracker.dataaccess.model.obj.tracker;

import com.felees.hbnpojogen.persistence.IPojoGenEntity;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerAdminRequests;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerAssigned;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerAttachments;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerComments;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerDependencies;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerHistory;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerNotifications;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerRelated;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerReminders;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerVotes;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.iface.ITrackerTasks;
import java.io.Serializable;
import java.util.Collections;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.WeakHashMap;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.proxy.HibernateProxy;


/** 
 * Object mapping for hibernate-handled table: tracker_tasks.
 * @author autogenerated
 */

@Entity
@Table(name = "tracker_tasks", catalog = "tracker")
public class TrackerTasks implements Cloneable, Serializable, IPojoGenEntity, ITrackerTasks {

	/** Serial Version UID. */
	private static final long serialVersionUID = -558981836L;

	/** Use a WeakHashMap so entries will be garbage collected once all entities 
		referring to a saved hash are garbage collected themselves. */
	private static final Map<Serializable, Integer> SAVED_HASHES =
		Collections.synchronizedMap(new WeakHashMap<Serializable, Integer>());
	
	/** hashCode temporary storage. */
	private volatile Integer hashCode;
	

	/** Field mapping. */
	private String address;
	/** Field mapping. */
	private String anonEmail;
	/** Field mapping. */
	private TrackerCity city;
	/** Field mapping. */
	private Integer closedbyVersion;
	/** Field mapping. */
	private TrackerUsers closedBy;
	/** Field mapping. */
	private String closureComment;
	/** Field mapping. */
	private Integer dateClosed;
	/** Field mapping. */
	private Integer dateOpened;
	/** Field mapping. */
	private String detailedDesc;
	/** Field mapping. */
	private Integer dueDate;
	/** Field mapping. */
	private Integer id = 0; // init for hibernate bug workaround
	/** Field mapping. */
	private Integer isClosed;
	/** Field mapping. */
	private TrackerListStatus itemStatus;
	/** Field mapping. */
	private String itemSummary;
	/** Field mapping. */
	private TrackerUsers lastEditedBy;
	/** Field mapping. */
	private Integer lastEditedTime;
	/** Field mapping. */
	private String latitude;
	/** Field mapping. */
	private String longitude;
	/** Field mapping. */
	private Integer markPrivate;
	/** Field mapping. */
	private TrackerUsers openedBy;
	/** Field mapping. */
	private TrackerListOs operatingSystem;
	/** Field mapping. */
	private Integer percentComplete;
	/** Field mapping. */
	private TrackerListCategory productCategory;
	/** Field mapping. */
	private TrackerListVersion productVersion;
	/** Field mapping. */
	private TrackerProjects project;
	/** Field mapping. */
	private TrackerListResolution resolutionReason;
	/** Field mapping. */
	private Integer taskPriority;
	/** Field mapping. */
	private Integer taskSeverity;
	/** Field mapping. */
	private String taskToken;
	/** Field mapping. */
	private TrackerListTasktype taskType;
	/** Field mapping. */
	private Set<TrackerAdminRequests> trackerAdminRequestss = new HashSet<TrackerAdminRequests>();

	/** Field mapping. */
	private Set<TrackerAssigned> trackerAssigneds = new HashSet<TrackerAssigned>();

	/** Field mapping. */
	private Set<TrackerAttachments> trackerAttachmentss = new HashSet<TrackerAttachments>();

	/** Field mapping. */
	private Set<TrackerComments> trackerCommentss = new HashSet<TrackerComments>();

	/** Field mapping. */
	private Set<TrackerDependencies> trackerDependencieses = new HashSet<TrackerDependencies>();

	/** Field mapping. */
	private Set<TrackerHistory> trackerHistories = new HashSet<TrackerHistory>();

	/** Field mapping. */
	private Set<TrackerNotifications> trackerNotificationss = new HashSet<TrackerNotifications>();

	/** Field mapping. */
	private Set<TrackerRelated> trackerRelateds = new HashSet<TrackerRelated>();

	/** Field mapping. */
	private Set<TrackerReminders> trackerReminderss = new HashSet<TrackerReminders>();

	/** Field mapping. */
	private Set<TrackerVotes> trackerVoteses = new HashSet<TrackerVotes>();

	/** Field mapping. */
	private Integer version;
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public TrackerTasks() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public TrackerTasks(Integer id) {
		this.id = id;
	}
	
	/** Constructor taking a given ID.
	 * @param anonEmail String object;
	 * @param closedbyVersion Integer object;
	 * @param closedBy TrackerUsers object;
	 * @param dateClosed Integer object;
	 * @param dateOpened Integer object;
	 * @param dueDate Integer object;
	 * @param id Integer object;
	 * @param isClosed Integer object;
	 * @param itemStatus TrackerListStatus object;
	 * @param itemSummary String object;
	 * @param lastEditedBy TrackerUsers object;
	 * @param lastEditedTime Integer object;
	 * @param markPrivate Integer object;
	 * @param openedBy TrackerUsers object;
	 * @param operatingSystem TrackerListOs object;
	 * @param percentComplete Integer object;
	 * @param productCategory TrackerListCategory object;
	 * @param productVersion TrackerListVersion object;
	 * @param project TrackerProjects object;
	 * @param resolutionReason TrackerListResolution object;
	 * @param taskPriority Integer object;
	 * @param taskSeverity Integer object;
	 * @param taskToken String object;
	 * @param taskType TrackerListTasktype object;
	 * @param version Integer object;
	 */
	public TrackerTasks(String anonEmail, Integer closedbyVersion, TrackerUsers closedBy, 					
			Integer dateClosed, Integer dateOpened, Integer dueDate, 					
			Integer id, Integer isClosed, TrackerListStatus itemStatus, 					
			String itemSummary, TrackerUsers lastEditedBy, Integer lastEditedTime, 					
			Integer markPrivate, TrackerUsers openedBy, TrackerListOs operatingSystem, 					
			Integer percentComplete, TrackerListCategory productCategory, TrackerListVersion productVersion, 					
			TrackerProjects project, TrackerListResolution resolutionReason, Integer taskPriority, 					
			Integer taskSeverity, String taskToken, TrackerListTasktype taskType, 					
			Integer version) {

		this.anonEmail = anonEmail;
		this.closedbyVersion = closedbyVersion;
		this.closedBy = closedBy;
		this.dateClosed = dateClosed;
		this.dateOpened = dateOpened;
		this.dueDate = dueDate;
		this.id = id;
		this.isClosed = isClosed;
		this.itemStatus = itemStatus;
		this.itemSummary = itemSummary;
		this.lastEditedBy = lastEditedBy;
		this.lastEditedTime = lastEditedTime;
		this.markPrivate = markPrivate;
		this.openedBy = openedBy;
		this.operatingSystem = operatingSystem;
		this.percentComplete = percentComplete;
		this.productCategory = productCategory;
		this.productVersion = productVersion;
		this.project = project;
		this.resolutionReason = resolutionReason;
		this.taskPriority = taskPriority;
		this.taskSeverity = taskSeverity;
		this.taskToken = taskToken;
		this.taskType = taskType;
		this.version = version;
	}
	
 


 
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return TrackerTasks.class;
	}
 

    /**
     * Return the value associated with the column: address.
	 * @return A String object (this.address)
	 */
	@Basic( optional = true )
	@Column( length = 21845  )
	public String getAddress() {
		return this.address;
		
	}
	

  
    /**  
     * Set the value related to the column: address.
	 * @param address the address value you wish to set
	 */
	public void setAddress(final String address) {
		this.address = address;
	}

    /**
     * Return the value associated with the column: anonEmail.
	 * @return A String object (this.anonEmail)
	 */
	@Basic( optional = false )
	@Column( name = "anon_email", nullable = false, length = 100  )
	public String getAnonEmail() {
		return this.anonEmail;
		
	}
	

  
    /**  
     * Set the value related to the column: anonEmail.
	 * @param anonEmail the anonEmail value you wish to set
	 */
	public void setAnonEmail(final String anonEmail) {
		this.anonEmail = anonEmail;
	}

    /**
     * Return the value associated with the column: city.
	 * @return A TrackerCity object (this.city)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "city_id", nullable = true )
	public TrackerCity getCity() {
		return this.city;
		
	}
	

  
    /**  
     * Set the value related to the column: city.
	 * @param city the city value you wish to set
	 */
	public void setCity(final TrackerCity city) {
		this.city = city;
	}

    /**
     * Return the value associated with the column: closedbyVersion.
	 * @return A Integer object (this.closedbyVersion)
	 */
	@Basic( optional = false )
	@Column( name = "closedby_version", nullable = false  )
	public Integer getClosedbyVersion() {
		return this.closedbyVersion;
		
	}
	

  
    /**  
     * Set the value related to the column: closedbyVersion.
	 * @param closedbyVersion the closedbyVersion value you wish to set
	 */
	public void setClosedbyVersion(final Integer closedbyVersion) {
		this.closedbyVersion = closedbyVersion;
	}

    /**
     * Return the value associated with the column: closedBy.
	 * @return A TrackerUsers object (this.closedBy)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "closed_by", nullable = false )
	public TrackerUsers getClosedBy() {
		return this.closedBy;
		
	}
	

  
    /**  
     * Set the value related to the column: closedBy.
	 * @param closedBy the closedBy value you wish to set
	 */
	public void setClosedBy(final TrackerUsers closedBy) {
		this.closedBy = closedBy;
	}

    /**
     * Return the value associated with the column: closureComment.
	 * @return A String object (this.closureComment)
	 */
	@Basic( optional = true )
	@Column( name = "closure_comment", length = 21845  )
	public String getClosureComment() {
		return this.closureComment;
		
	}
	

  
    /**  
     * Set the value related to the column: closureComment.
	 * @param closureComment the closureComment value you wish to set
	 */
	public void setClosureComment(final String closureComment) {
		this.closureComment = closureComment;
	}

    /**
     * Return the value associated with the column: dateClosed.
	 * @return A Integer object (this.dateClosed)
	 */
	@Basic( optional = false )
	@Column( name = "date_closed", nullable = false  )
	public Integer getDateClosed() {
		return this.dateClosed;
		
	}
	

  
    /**  
     * Set the value related to the column: dateClosed.
	 * @param dateClosed the dateClosed value you wish to set
	 */
	public void setDateClosed(final Integer dateClosed) {
		this.dateClosed = dateClosed;
	}

    /**
     * Return the value associated with the column: dateOpened.
	 * @return A Integer object (this.dateOpened)
	 */
	@Basic( optional = false )
	@Column( name = "date_opened", nullable = false  )
	public Integer getDateOpened() {
		return this.dateOpened;
		
	}
	

  
    /**  
     * Set the value related to the column: dateOpened.
	 * @param dateOpened the dateOpened value you wish to set
	 */
	public void setDateOpened(final Integer dateOpened) {
		this.dateOpened = dateOpened;
	}

    /**
     * Return the value associated with the column: detailedDesc.
	 * @return A String object (this.detailedDesc)
	 */
	@Basic( optional = true )
	@Column( name = "detailed_desc", length = 21845  )
	public String getDetailedDesc() {
		return this.detailedDesc;
		
	}
	

  
    /**  
     * Set the value related to the column: detailedDesc.
	 * @param detailedDesc the detailedDesc value you wish to set
	 */
	public void setDetailedDesc(final String detailedDesc) {
		this.detailedDesc = detailedDesc;
	}

    /**
     * Return the value associated with the column: dueDate.
	 * @return A Integer object (this.dueDate)
	 */
	@Basic( optional = false )
	@Column( name = "due_date", nullable = false  )
	public Integer getDueDate() {
		return this.dueDate;
		
	}
	

  
    /**  
     * Set the value related to the column: dueDate.
	 * @param dueDate the dueDate value you wish to set
	 */
	public void setDueDate(final Integer dueDate) {
		this.dueDate = dueDate;
	}

    /**
     * Return the value associated with the column: id.
	 * @return A Integer object (this.id)
	 */
    @Id 
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Basic( optional = false )
	@Column( name = "task_id", nullable = false  )
	public Integer getId() {
		return this.id;
		
	}
	

  
    /**  
     * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final Integer id) {
		// If we've just been persisted and hashCode has been
		// returned then make sure other entities with this
		// ID return the already returned hash code
		if ( (this.id == null || this.id == 0) &&
				(id != null) &&
				(this.hashCode != null) ) {
		SAVED_HASHES.put( id, this.hashCode );
		}
		this.id = id;
	}

    /**
     * Return the value associated with the column: isClosed.
	 * @return A Integer object (this.isClosed)
	 */
	@Basic( optional = false )
	@Column( name = "is_closed", nullable = false  )
	public Integer getIsClosed() {
		return this.isClosed;
		
	}
	

  
    /**  
     * Set the value related to the column: isClosed.
	 * @param isClosed the isClosed value you wish to set
	 */
	public void setIsClosed(final Integer isClosed) {
		this.isClosed = isClosed;
	}

    /**
     * Return the value associated with the column: itemStatus.
	 * @return A TrackerListStatus object (this.itemStatus)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "item_status", nullable = false )
	public TrackerListStatus getItemStatus() {
		return this.itemStatus;
		
	}
	

  
    /**  
     * Set the value related to the column: itemStatus.
	 * @param itemStatus the itemStatus value you wish to set
	 */
	public void setItemStatus(final TrackerListStatus itemStatus) {
		this.itemStatus = itemStatus;
	}

    /**
     * Return the value associated with the column: itemSummary.
	 * @return A String object (this.itemSummary)
	 */
	@Basic( optional = false )
	@Column( name = "item_summary", nullable = false, length = 100  )
	public String getItemSummary() {
		return this.itemSummary;
		
	}
	

  
    /**  
     * Set the value related to the column: itemSummary.
	 * @param itemSummary the itemSummary value you wish to set
	 */
	public void setItemSummary(final String itemSummary) {
		this.itemSummary = itemSummary;
	}

    /**
     * Return the value associated with the column: lastEditedBy.
	 * @return A TrackerUsers object (this.lastEditedBy)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "last_edited_by", nullable = false )
	public TrackerUsers getLastEditedBy() {
		return this.lastEditedBy;
		
	}
	

  
    /**  
     * Set the value related to the column: lastEditedBy.
	 * @param lastEditedBy the lastEditedBy value you wish to set
	 */
	public void setLastEditedBy(final TrackerUsers lastEditedBy) {
		this.lastEditedBy = lastEditedBy;
	}

    /**
     * Return the value associated with the column: lastEditedTime.
	 * @return A Integer object (this.lastEditedTime)
	 */
	@Basic( optional = false )
	@Column( name = "last_edited_time", nullable = false  )
	public Integer getLastEditedTime() {
		return this.lastEditedTime;
		
	}
	

  
    /**  
     * Set the value related to the column: lastEditedTime.
	 * @param lastEditedTime the lastEditedTime value you wish to set
	 */
	public void setLastEditedTime(final Integer lastEditedTime) {
		this.lastEditedTime = lastEditedTime;
	}

    /**
     * Return the value associated with the column: latitude.
	 * @return A String object (this.latitude)
	 */
	@Basic( optional = true )
	@Column( length = 200  )
	public String getLatitude() {
		return this.latitude;
		
	}
	

  
    /**  
     * Set the value related to the column: latitude.
	 * @param latitude the latitude value you wish to set
	 */
	public void setLatitude(final String latitude) {
		this.latitude = latitude;
	}

    /**
     * Return the value associated with the column: longitude.
	 * @return A String object (this.longitude)
	 */
	@Basic( optional = true )
	@Column( length = 200  )
	public String getLongitude() {
		return this.longitude;
		
	}
	

  
    /**  
     * Set the value related to the column: longitude.
	 * @param longitude the longitude value you wish to set
	 */
	public void setLongitude(final String longitude) {
		this.longitude = longitude;
	}

    /**
     * Return the value associated with the column: markPrivate.
	 * @return A Integer object (this.markPrivate)
	 */
	@Basic( optional = false )
	@Column( name = "mark_private", nullable = false  )
	public Integer getMarkPrivate() {
		return this.markPrivate;
		
	}
	

  
    /**  
     * Set the value related to the column: markPrivate.
	 * @param markPrivate the markPrivate value you wish to set
	 */
	public void setMarkPrivate(final Integer markPrivate) {
		this.markPrivate = markPrivate;
	}

    /**
     * Return the value associated with the column: openedBy.
	 * @return A TrackerUsers object (this.openedBy)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "opened_by", nullable = false )
	public TrackerUsers getOpenedBy() {
		return this.openedBy;
		
	}
	

  
    /**  
     * Set the value related to the column: openedBy.
	 * @param openedBy the openedBy value you wish to set
	 */
	public void setOpenedBy(final TrackerUsers openedBy) {
		this.openedBy = openedBy;
	}

    /**
     * Return the value associated with the column: operatingSystem.
	 * @return A TrackerListOs object (this.operatingSystem)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "operating_system", nullable = false )
	public TrackerListOs getOperatingSystem() {
		return this.operatingSystem;
		
	}
	

  
    /**  
     * Set the value related to the column: operatingSystem.
	 * @param operatingSystem the operatingSystem value you wish to set
	 */
	public void setOperatingSystem(final TrackerListOs operatingSystem) {
		this.operatingSystem = operatingSystem;
	}

    /**
     * Return the value associated with the column: percentComplete.
	 * @return A Integer object (this.percentComplete)
	 */
	@Basic( optional = false )
	@Column( name = "percent_complete", nullable = false  )
	public Integer getPercentComplete() {
		return this.percentComplete;
		
	}
	

  
    /**  
     * Set the value related to the column: percentComplete.
	 * @param percentComplete the percentComplete value you wish to set
	 */
	public void setPercentComplete(final Integer percentComplete) {
		this.percentComplete = percentComplete;
	}

    /**
     * Return the value associated with the column: productCategory.
	 * @return A TrackerListCategory object (this.productCategory)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "product_category", nullable = false )
	public TrackerListCategory getProductCategory() {
		return this.productCategory;
		
	}
	

  
    /**  
     * Set the value related to the column: productCategory.
	 * @param productCategory the productCategory value you wish to set
	 */
	public void setProductCategory(final TrackerListCategory productCategory) {
		this.productCategory = productCategory;
	}

    /**
     * Return the value associated with the column: productVersion.
	 * @return A TrackerListVersion object (this.productVersion)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "product_version", nullable = false )
	public TrackerListVersion getProductVersion() {
		return this.productVersion;
		
	}
	

  
    /**  
     * Set the value related to the column: productVersion.
	 * @param productVersion the productVersion value you wish to set
	 */
	public void setProductVersion(final TrackerListVersion productVersion) {
		this.productVersion = productVersion;
	}

    /**
     * Return the value associated with the column: project.
	 * @return A TrackerProjects object (this.project)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "project_id", nullable = false )
	public TrackerProjects getProject() {
		return this.project;
		
	}
	

  
    /**  
     * Set the value related to the column: project.
	 * @param project the project value you wish to set
	 */
	public void setProject(final TrackerProjects project) {
		this.project = project;
	}

    /**
     * Return the value associated with the column: resolutionReason.
	 * @return A TrackerListResolution object (this.resolutionReason)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "resolution_reason", nullable = false )
	public TrackerListResolution getResolutionReason() {
		return this.resolutionReason;
		
	}
	

  
    /**  
     * Set the value related to the column: resolutionReason.
	 * @param resolutionReason the resolutionReason value you wish to set
	 */
	public void setResolutionReason(final TrackerListResolution resolutionReason) {
		this.resolutionReason = resolutionReason;
	}

    /**
     * Return the value associated with the column: taskPriority.
	 * @return A Integer object (this.taskPriority)
	 */
	@Basic( optional = false )
	@Column( name = "task_priority", nullable = false  )
	public Integer getTaskPriority() {
		return this.taskPriority;
		
	}
	

  
    /**  
     * Set the value related to the column: taskPriority.
	 * @param taskPriority the taskPriority value you wish to set
	 */
	public void setTaskPriority(final Integer taskPriority) {
		this.taskPriority = taskPriority;
	}

    /**
     * Return the value associated with the column: taskSeverity.
	 * @return A Integer object (this.taskSeverity)
	 */
	@Basic( optional = false )
	@Column( name = "task_severity", nullable = false  )
	public Integer getTaskSeverity() {
		return this.taskSeverity;
		
	}
	

  
    /**  
     * Set the value related to the column: taskSeverity.
	 * @param taskSeverity the taskSeverity value you wish to set
	 */
	public void setTaskSeverity(final Integer taskSeverity) {
		this.taskSeverity = taskSeverity;
	}

    /**
     * Return the value associated with the column: taskToken.
	 * @return A String object (this.taskToken)
	 */
	@Basic( optional = false )
	@Column( name = "task_token", nullable = false, length = 32  )
	public String getTaskToken() {
		return this.taskToken;
		
	}
	

  
    /**  
     * Set the value related to the column: taskToken.
	 * @param taskToken the taskToken value you wish to set
	 */
	public void setTaskToken(final String taskToken) {
		this.taskToken = taskToken;
	}

    /**
     * Return the value associated with the column: taskType.
	 * @return A TrackerListTasktype object (this.taskType)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "task_type", nullable = false )
	public TrackerListTasktype getTaskType() {
		return this.taskType;
		
	}
	

  
    /**  
     * Set the value related to the column: taskType.
	 * @param taskType the taskType value you wish to set
	 */
	public void setTaskType(final TrackerListTasktype taskType) {
		this.taskType = taskType;
	}

    /**
     * Return the value associated with the column: trackerAdminRequests.
	 * @return A Set&lt;TrackerAdminRequests&gt; object (this.trackerAdminRequests)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "task"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "task_id", nullable = false  )
	public Set<TrackerAdminRequests> getTrackerAdminRequestss() {
		return this.trackerAdminRequestss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerAdminRequests to the trackerAdminRequestss set.
	 * @param trackerAdminRequests item to add
	 */
	public void addTrackerAdminRequests(TrackerAdminRequests trackerAdminRequests) {
		trackerAdminRequests.setTask(this);
		this.trackerAdminRequestss.add(trackerAdminRequests);
	}

  
    /**  
     * Set the value related to the column: trackerAdminRequests.
	 * @param trackerAdminRequests the trackerAdminRequests value you wish to set
	 */
	public void setTrackerAdminRequestss(final Set<TrackerAdminRequests> trackerAdminRequests) {
		this.trackerAdminRequestss = trackerAdminRequests;
	}

    /**
     * Return the value associated with the column: trackerAssigned.
	 * @return A Set&lt;TrackerAssigned&gt; object (this.trackerAssigned)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "task"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "task_id", nullable = false  )
	public Set<TrackerAssigned> getTrackerAssigneds() {
		return this.trackerAssigneds;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerAssigned to the trackerAssigneds set.
	 * @param trackerAssigned item to add
	 */
	public void addTrackerAssigned(TrackerAssigned trackerAssigned) {
		trackerAssigned.setTask(this);
		this.trackerAssigneds.add(trackerAssigned);
	}

  
    /**  
     * Set the value related to the column: trackerAssigned.
	 * @param trackerAssigned the trackerAssigned value you wish to set
	 */
	public void setTrackerAssigneds(final Set<TrackerAssigned> trackerAssigned) {
		this.trackerAssigneds = trackerAssigned;
	}

    /**
     * Return the value associated with the column: trackerAttachments.
	 * @return A Set&lt;TrackerAttachments&gt; object (this.trackerAttachments)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "task"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "task_id", nullable = false  )
	public Set<TrackerAttachments> getTrackerAttachmentss() {
		return this.trackerAttachmentss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerAttachments to the trackerAttachmentss set.
	 * @param trackerAttachments item to add
	 */
	public void addTrackerAttachments(TrackerAttachments trackerAttachments) {
		trackerAttachments.setTask(this);
		this.trackerAttachmentss.add(trackerAttachments);
	}

  
    /**  
     * Set the value related to the column: trackerAttachments.
	 * @param trackerAttachments the trackerAttachments value you wish to set
	 */
	public void setTrackerAttachmentss(final Set<TrackerAttachments> trackerAttachments) {
		this.trackerAttachmentss = trackerAttachments;
	}

    /**
     * Return the value associated with the column: trackerComments.
	 * @return A Set&lt;TrackerComments&gt; object (this.trackerComments)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "task"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "task_id", nullable = false  )
	public Set<TrackerComments> getTrackerCommentss() {
		return this.trackerCommentss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerComments to the trackerCommentss set.
	 * @param trackerComments item to add
	 */
	public void addTrackerComments(TrackerComments trackerComments) {
		trackerComments.setTask(this);
		this.trackerCommentss.add(trackerComments);
	}

  
    /**  
     * Set the value related to the column: trackerComments.
	 * @param trackerComments the trackerComments value you wish to set
	 */
	public void setTrackerCommentss(final Set<TrackerComments> trackerComments) {
		this.trackerCommentss = trackerComments;
	}

    /**
     * Return the value associated with the column: trackerDependencies.
	 * @return A Set&lt;TrackerDependencies&gt; object (this.trackerDependencies)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "depTask"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "task_id", nullable = false  )
	public Set<TrackerDependencies> getTrackerDependencieses() {
		return this.trackerDependencieses;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerDependencies to the trackerDependencieses set.
	 * @param trackerDependencies item to add
	 */
	public void addTrackerDependencies(TrackerDependencies trackerDependencies) {
		trackerDependencies.setDepTask(this);
		this.trackerDependencieses.add(trackerDependencies);
	}

  
    /**  
     * Set the value related to the column: trackerDependencies.
	 * @param trackerDependencies the trackerDependencies value you wish to set
	 */
	public void setTrackerDependencieses(final Set<TrackerDependencies> trackerDependencies) {
		this.trackerDependencieses = trackerDependencies;
	}

    /**
     * Return the value associated with the column: trackerHistory.
	 * @return A Set&lt;TrackerHistory&gt; object (this.trackerHistory)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "task"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "task_id", nullable = false  )
	public Set<TrackerHistory> getTrackerHistories() {
		return this.trackerHistories;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerHistory to the trackerHistories set.
	 * @param trackerHistory item to add
	 */
	public void addTrackerHistory(TrackerHistory trackerHistory) {
		trackerHistory.setTask(this);
		this.trackerHistories.add(trackerHistory);
	}

  
    /**  
     * Set the value related to the column: trackerHistory.
	 * @param trackerHistory the trackerHistory value you wish to set
	 */
	public void setTrackerHistories(final Set<TrackerHistory> trackerHistory) {
		this.trackerHistories = trackerHistory;
	}

    /**
     * Return the value associated with the column: trackerNotifications.
	 * @return A Set&lt;TrackerNotifications&gt; object (this.trackerNotifications)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "task"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "task_id", nullable = false  )
	public Set<TrackerNotifications> getTrackerNotificationss() {
		return this.trackerNotificationss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerNotifications to the trackerNotificationss set.
	 * @param trackerNotifications item to add
	 */
	public void addTrackerNotifications(TrackerNotifications trackerNotifications) {
		trackerNotifications.setTask(this);
		this.trackerNotificationss.add(trackerNotifications);
	}

  
    /**  
     * Set the value related to the column: trackerNotifications.
	 * @param trackerNotifications the trackerNotifications value you wish to set
	 */
	public void setTrackerNotificationss(final Set<TrackerNotifications> trackerNotifications) {
		this.trackerNotificationss = trackerNotifications;
	}

    /**
     * Return the value associated with the column: trackerRelated.
	 * @return A Set&lt;TrackerRelated&gt; object (this.trackerRelated)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "relatedTask"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "task_id", nullable = false  )
	public Set<TrackerRelated> getTrackerRelateds() {
		return this.trackerRelateds;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerRelated to the trackerRelateds set.
	 * @param trackerRelated item to add
	 */
	public void addTrackerRelated(TrackerRelated trackerRelated) {
		trackerRelated.setRelatedTask(this);
		this.trackerRelateds.add(trackerRelated);
	}

  
    /**  
     * Set the value related to the column: trackerRelated.
	 * @param trackerRelated the trackerRelated value you wish to set
	 */
	public void setTrackerRelateds(final Set<TrackerRelated> trackerRelated) {
		this.trackerRelateds = trackerRelated;
	}

    /**
     * Return the value associated with the column: trackerReminders.
	 * @return A Set&lt;TrackerReminders&gt; object (this.trackerReminders)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "task"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "task_id", nullable = false  )
	public Set<TrackerReminders> getTrackerReminderss() {
		return this.trackerReminderss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerReminders to the trackerReminderss set.
	 * @param trackerReminders item to add
	 */
	public void addTrackerReminders(TrackerReminders trackerReminders) {
		trackerReminders.setTask(this);
		this.trackerReminderss.add(trackerReminders);
	}

  
    /**  
     * Set the value related to the column: trackerReminders.
	 * @param trackerReminders the trackerReminders value you wish to set
	 */
	public void setTrackerReminderss(final Set<TrackerReminders> trackerReminders) {
		this.trackerReminderss = trackerReminders;
	}

    /**
     * Return the value associated with the column: trackerVotes.
	 * @return A Set&lt;TrackerVotes&gt; object (this.trackerVotes)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "task"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "task_id", nullable = false  )
	public Set<TrackerVotes> getTrackerVoteses() {
		return this.trackerVoteses;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerVotes to the trackerVoteses set.
	 * @param trackerVotes item to add
	 */
	public void addTrackerVotes(TrackerVotes trackerVotes) {
		trackerVotes.setTask(this);
		this.trackerVoteses.add(trackerVotes);
	}

  
    /**  
     * Set the value related to the column: trackerVotes.
	 * @param trackerVotes the trackerVotes value you wish to set
	 */
	public void setTrackerVoteses(final Set<TrackerVotes> trackerVotes) {
		this.trackerVoteses = trackerVotes;
	}

    /**
     * Return the value associated with the column: version.
	 * @return A Integer object (this.version)
	 */
	@Basic( optional = false )
	@Column( nullable = false  )
	public Integer getVersion() {
		return this.version;
		
	}
	

  
    /**  
     * Set the value related to the column: version.
	 * @param version the version value you wish to set
	 */
	public void setVersion(final Integer version) {
		this.version = version;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public TrackerTasks clone() throws CloneNotSupportedException {
		
        final TrackerTasks copy = (TrackerTasks)super.clone();

		copy.setAddress(this.getAddress());
		copy.setAnonEmail(this.getAnonEmail());
		copy.setCity(this.getCity());
		copy.setClosedbyVersion(this.getClosedbyVersion());
		copy.setClosedBy(this.getClosedBy());
		copy.setClosureComment(this.getClosureComment());
		copy.setDateClosed(this.getDateClosed());
		copy.setDateOpened(this.getDateOpened());
		copy.setDetailedDesc(this.getDetailedDesc());
		copy.setDueDate(this.getDueDate());
		copy.setId(this.getId());
		copy.setIsClosed(this.getIsClosed());
		copy.setItemStatus(this.getItemStatus());
		copy.setItemSummary(this.getItemSummary());
		copy.setLastEditedBy(this.getLastEditedBy());
		copy.setLastEditedTime(this.getLastEditedTime());
		copy.setLatitude(this.getLatitude());
		copy.setLongitude(this.getLongitude());
		copy.setMarkPrivate(this.getMarkPrivate());
		copy.setOpenedBy(this.getOpenedBy());
		copy.setOperatingSystem(this.getOperatingSystem());
		copy.setPercentComplete(this.getPercentComplete());
		copy.setProductCategory(this.getProductCategory());
		copy.setProductVersion(this.getProductVersion());
		copy.setProject(this.getProject());
		copy.setResolutionReason(this.getResolutionReason());
		copy.setTaskPriority(this.getTaskPriority());
		copy.setTaskSeverity(this.getTaskSeverity());
		copy.setTaskToken(this.getTaskToken());
		copy.setTaskType(this.getTaskType());
		if (this.getTrackerAdminRequestss() != null) {
			copy.getTrackerAdminRequestss().addAll(this.getTrackerAdminRequestss());
		}
		if (this.getTrackerAssigneds() != null) {
			copy.getTrackerAssigneds().addAll(this.getTrackerAssigneds());
		}
		if (this.getTrackerAttachmentss() != null) {
			copy.getTrackerAttachmentss().addAll(this.getTrackerAttachmentss());
		}
		if (this.getTrackerCommentss() != null) {
			copy.getTrackerCommentss().addAll(this.getTrackerCommentss());
		}
		if (this.getTrackerDependencieses() != null) {
			copy.getTrackerDependencieses().addAll(this.getTrackerDependencieses());
		}
		if (this.getTrackerHistories() != null) {
			copy.getTrackerHistories().addAll(this.getTrackerHistories());
		}
		if (this.getTrackerNotificationss() != null) {
			copy.getTrackerNotificationss().addAll(this.getTrackerNotificationss());
		}
		if (this.getTrackerRelateds() != null) {
			copy.getTrackerRelateds().addAll(this.getTrackerRelateds());
		}
		if (this.getTrackerReminderss() != null) {
			copy.getTrackerReminderss().addAll(this.getTrackerReminderss());
		}
		if (this.getTrackerVoteses() != null) {
			copy.getTrackerVoteses().addAll(this.getTrackerVoteses());
		}
		copy.setVersion(this.getVersion());
		return copy;
	}
	


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("address: " + this.getAddress() + ", ");
		sb.append("anonEmail: " + this.getAnonEmail() + ", ");
		sb.append("closedbyVersion: " + this.getClosedbyVersion() + ", ");
		sb.append("closureComment: " + this.getClosureComment() + ", ");
		sb.append("dateClosed: " + this.getDateClosed() + ", ");
		sb.append("dateOpened: " + this.getDateOpened() + ", ");
		sb.append("detailedDesc: " + this.getDetailedDesc() + ", ");
		sb.append("dueDate: " + this.getDueDate() + ", ");
		sb.append("id: " + this.getId() + ", ");
		sb.append("isClosed: " + this.getIsClosed() + ", ");
		sb.append("itemSummary: " + this.getItemSummary() + ", ");
		sb.append("lastEditedTime: " + this.getLastEditedTime() + ", ");
		sb.append("latitude: " + this.getLatitude() + ", ");
		sb.append("longitude: " + this.getLongitude() + ", ");
		sb.append("markPrivate: " + this.getMarkPrivate() + ", ");
		sb.append("percentComplete: " + this.getPercentComplete() + ", ");
		sb.append("taskPriority: " + this.getTaskPriority() + ", ");
		sb.append("taskSeverity: " + this.getTaskSeverity() + ", ");
		sb.append("taskToken: " + this.getTaskToken() + ", ");
		sb.append("version: " + this.getVersion());
		return sb.toString();		
	}


	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		Object proxyThat = aThat;
		
		if ( this == aThat ) {
			 return true;
		}

		
		if (aThat instanceof HibernateProxy) {
 			// narrow down the proxy to the class we are dealing with.
 			try {
				proxyThat = ((HibernateProxy) aThat).getHibernateLazyInitializer().getImplementation(); 
			} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		   	}
		}
		if (aThat == null)  {
			 return false;
		}
		
		final TrackerTasks that; 
		try {
			that = (TrackerTasks) proxyThat;
			if ( !(that.getClassType().equals(this.getClassType()))){
				return false;
			}
		} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		} catch (ClassCastException e) {
				return false;
		}
		
		
		boolean result = true;
		result = result && (((this.getId() == null) && ( that.getId() == null)) || (this.getId() != null  && this.getId().equals(that.getId())));
		result = result && (((getAddress() == null) && (that.getAddress() == null)) || (getAddress() != null && getAddress().equals(that.getAddress())));
		result = result && (((getAnonEmail() == null) && (that.getAnonEmail() == null)) || (getAnonEmail() != null && getAnonEmail().equals(that.getAnonEmail())));
		result = result && (((getCity() == null) && (that.getCity() == null)) || (getCity() != null && getCity().getId().equals(that.getCity().getId())));	
		result = result && (((getClosedbyVersion() == null) && (that.getClosedbyVersion() == null)) || (getClosedbyVersion() != null && getClosedbyVersion().equals(that.getClosedbyVersion())));
		result = result && (((getClosedBy() == null) && (that.getClosedBy() == null)) || (getClosedBy() != null && getClosedBy().getId().equals(that.getClosedBy().getId())));	
		result = result && (((getClosureComment() == null) && (that.getClosureComment() == null)) || (getClosureComment() != null && getClosureComment().equals(that.getClosureComment())));
		result = result && (((getDateClosed() == null) && (that.getDateClosed() == null)) || (getDateClosed() != null && getDateClosed().equals(that.getDateClosed())));
		result = result && (((getDateOpened() == null) && (that.getDateOpened() == null)) || (getDateOpened() != null && getDateOpened().equals(that.getDateOpened())));
		result = result && (((getDetailedDesc() == null) && (that.getDetailedDesc() == null)) || (getDetailedDesc() != null && getDetailedDesc().equals(that.getDetailedDesc())));
		result = result && (((getDueDate() == null) && (that.getDueDate() == null)) || (getDueDate() != null && getDueDate().equals(that.getDueDate())));
		result = result && (((getIsClosed() == null) && (that.getIsClosed() == null)) || (getIsClosed() != null && getIsClosed().equals(that.getIsClosed())));
		result = result && (((getItemStatus() == null) && (that.getItemStatus() == null)) || (getItemStatus() != null && getItemStatus().getId().equals(that.getItemStatus().getId())));	
		result = result && (((getItemSummary() == null) && (that.getItemSummary() == null)) || (getItemSummary() != null && getItemSummary().equals(that.getItemSummary())));
		result = result && (((getLastEditedBy() == null) && (that.getLastEditedBy() == null)) || (getLastEditedBy() != null && getLastEditedBy().getId().equals(that.getLastEditedBy().getId())));	
		result = result && (((getLastEditedTime() == null) && (that.getLastEditedTime() == null)) || (getLastEditedTime() != null && getLastEditedTime().equals(that.getLastEditedTime())));
		result = result && (((getLatitude() == null) && (that.getLatitude() == null)) || (getLatitude() != null && getLatitude().equals(that.getLatitude())));
		result = result && (((getLongitude() == null) && (that.getLongitude() == null)) || (getLongitude() != null && getLongitude().equals(that.getLongitude())));
		result = result && (((getMarkPrivate() == null) && (that.getMarkPrivate() == null)) || (getMarkPrivate() != null && getMarkPrivate().equals(that.getMarkPrivate())));
		result = result && (((getOpenedBy() == null) && (that.getOpenedBy() == null)) || (getOpenedBy() != null && getOpenedBy().getId().equals(that.getOpenedBy().getId())));	
		result = result && (((getOperatingSystem() == null) && (that.getOperatingSystem() == null)) || (getOperatingSystem() != null && getOperatingSystem().getId().equals(that.getOperatingSystem().getId())));	
		result = result && (((getPercentComplete() == null) && (that.getPercentComplete() == null)) || (getPercentComplete() != null && getPercentComplete().equals(that.getPercentComplete())));
		result = result && (((getProductCategory() == null) && (that.getProductCategory() == null)) || (getProductCategory() != null && getProductCategory().getId().equals(that.getProductCategory().getId())));	
		result = result && (((getProductVersion() == null) && (that.getProductVersion() == null)) || (getProductVersion() != null && getProductVersion().getId().equals(that.getProductVersion().getId())));	
		result = result && (((getProject() == null) && (that.getProject() == null)) || (getProject() != null && getProject().getId().equals(that.getProject().getId())));	
		result = result && (((getResolutionReason() == null) && (that.getResolutionReason() == null)) || (getResolutionReason() != null && getResolutionReason().getId().equals(that.getResolutionReason().getId())));	
		result = result && (((getTaskPriority() == null) && (that.getTaskPriority() == null)) || (getTaskPriority() != null && getTaskPriority().equals(that.getTaskPriority())));
		result = result && (((getTaskSeverity() == null) && (that.getTaskSeverity() == null)) || (getTaskSeverity() != null && getTaskSeverity().equals(that.getTaskSeverity())));
		result = result && (((getTaskToken() == null) && (that.getTaskToken() == null)) || (getTaskToken() != null && getTaskToken().equals(that.getTaskToken())));
		result = result && (((getTaskType() == null) && (that.getTaskType() == null)) || (getTaskType() != null && getTaskType().getId().equals(that.getTaskType().getId())));	
		result = result && (((getVersion() == null) && (that.getVersion() == null)) || (getVersion() != null && getVersion().equals(that.getVersion())));
		return result;
	}
	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		if ( this.hashCode == null ) {
			synchronized ( this ) {
				if ( this.hashCode == null ) {
					Integer newHashCode = null;

					if ( getId() != null ) {
					newHashCode = SAVED_HASHES.get( getId() );
					}
					
					if ( newHashCode == null ) {
						if ( getId() != null && getId() != 0) {
							newHashCode = getId();
						} else {

						}
					}
					
					this.hashCode = newHashCode;
				}
			}
		}
	return this.hashCode;
	}
	

	
}
