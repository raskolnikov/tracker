package com.m2yazilim.tracker.dataaccess.model.obj.tracker;

import com.felees.hbnpojogen.persistence.IPojoGenEntity;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerAdminRequests;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerAssigned;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerAttachments;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerComments;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerHistory;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerListCategory;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerNotifications;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerProjects;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerReminders;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerSearches;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerTasks;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerUsersInGroups;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.TrackerVotes;
import com.m2yazilim.tracker.dataaccess.model.obj.tracker.iface.ITrackerUsers;
import java.io.Serializable;
import java.util.Collections;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.WeakHashMap;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.proxy.HibernateProxy;


/** 
 * Object mapping for hibernate-handled table: tracker_users.
 * @author autogenerated
 */

@Entity
@Table(name = "tracker_users", catalog = "tracker")
public class TrackerUsers implements Cloneable, Serializable, IPojoGenEntity, ITrackerUsers {

	/** Serial Version UID. */
	private static final long serialVersionUID = -558981835L;

	/** Use a WeakHashMap so entries will be garbage collected once all entities 
		referring to a saved hash are garbage collected themselves. */
	private static final Map<Serializable, Integer> SAVED_HASHES =
		Collections.synchronizedMap(new WeakHashMap<Serializable, Integer>());
	
	/** hashCode temporary storage. */
	private volatile Integer hashCode;
	

	/** Field mapping. */
	private Integer accountEnabled;
	/** Field mapping. */
	private String dateformat;
	/** Field mapping. */
	private String dateformatExtended;
	/** Field mapping. */
	private String emailAddress;
	/** Field mapping. */
	private Integer id = 0; // init for hibernate bug workaround
	/** Field mapping. */
	private String jabberId;
	/** Field mapping. */
	private Integer lockUntil;
	/** Field mapping. */
	private Integer loginAttempts;
	/** Field mapping. */
	private String magicUrl;
	/** Field mapping. */
	private Integer notifyOwn;
	/** Field mapping. */
	private Integer notifyType;
	/** Field mapping. */
	private String realName;
	/** Field mapping. */
	private Integer registerDate;
	/** Field mapping. */
	private Integer tasksPerpage;
	/** Field mapping. */
	private Integer timeZone;
	/** Field mapping. */
	private Set<TrackerAdminRequests> trackerAdminRequestss = new HashSet<TrackerAdminRequests>();

	/** Field mapping. */
	private Set<TrackerAssigned> trackerAssigneds = new HashSet<TrackerAssigned>();

	/** Field mapping. */
	private Set<TrackerAttachments> trackerAttachmentss = new HashSet<TrackerAttachments>();

	/** Field mapping. */
	private Set<TrackerComments> trackerCommentss = new HashSet<TrackerComments>();

	/** Field mapping. */
	private Set<TrackerHistory> trackerHistories = new HashSet<TrackerHistory>();

	/** Field mapping. */
	private Set<TrackerListCategory> trackerListCategories = new HashSet<TrackerListCategory>();

	/** Field mapping. */
	private Set<TrackerNotifications> trackerNotificationss = new HashSet<TrackerNotifications>();

	/** Field mapping. */
	private Set<TrackerProjects> trackerProjectss = new HashSet<TrackerProjects>();

	/** Field mapping. */
	private Set<TrackerReminders> trackerReminderss = new HashSet<TrackerReminders>();

	/** Field mapping. */
	private Set<TrackerSearches> trackerSearcheses = new HashSet<TrackerSearches>();

	/** Field mapping. */
	private Set<TrackerTasks> trackerTaskss = new HashSet<TrackerTasks>();

	/** Field mapping. */
	private Set<TrackerUsersInGroups> trackerUsersInGroupss = new HashSet<TrackerUsersInGroups>();

	/** Field mapping. */
	private Set<TrackerVotes> trackerVoteses = new HashSet<TrackerVotes>();

	/** Field mapping. */
	private String userName;
	/** Field mapping. */
	private String userPass;
	/** Field mapping. */
	private Integer version;
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public TrackerUsers() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public TrackerUsers(Integer id) {
		this.id = id;
	}
	
	/** Constructor taking a given ID.
	 * @param accountEnabled Integer object;
	 * @param dateformat String object;
	 * @param dateformatExtended String object;
	 * @param emailAddress String object;
	 * @param id Integer object;
	 * @param jabberId String object;
	 * @param lockUntil Integer object;
	 * @param loginAttempts Integer object;
	 * @param magicUrl String object;
	 * @param notifyOwn Integer object;
	 * @param notifyType Integer object;
	 * @param realName String object;
	 * @param registerDate Integer object;
	 * @param tasksPerpage Integer object;
	 * @param timeZone Integer object;
	 * @param userName String object;
	 * @param version Integer object;
	 */
	public TrackerUsers(Integer accountEnabled, String dateformat, String dateformatExtended, 					
			String emailAddress, Integer id, String jabberId, 					
			Integer lockUntil, Integer loginAttempts, String magicUrl, 					
			Integer notifyOwn, Integer notifyType, String realName, 					
			Integer registerDate, Integer tasksPerpage, Integer timeZone, 					
			String userName, Integer version) {

		this.accountEnabled = accountEnabled;
		this.dateformat = dateformat;
		this.dateformatExtended = dateformatExtended;
		this.emailAddress = emailAddress;
		this.id = id;
		this.jabberId = jabberId;
		this.lockUntil = lockUntil;
		this.loginAttempts = loginAttempts;
		this.magicUrl = magicUrl;
		this.notifyOwn = notifyOwn;
		this.notifyType = notifyType;
		this.realName = realName;
		this.registerDate = registerDate;
		this.tasksPerpage = tasksPerpage;
		this.timeZone = timeZone;
		this.userName = userName;
		this.version = version;
	}
	
 


 
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return TrackerUsers.class;
	}
 

    /**
     * Return the value associated with the column: accountEnabled.
	 * @return A Integer object (this.accountEnabled)
	 */
	@Basic( optional = false )
	@Column( name = "account_enabled", nullable = false  )
	public Integer getAccountEnabled() {
		return this.accountEnabled;
		
	}
	

  
    /**  
     * Set the value related to the column: accountEnabled.
	 * @param accountEnabled the accountEnabled value you wish to set
	 */
	public void setAccountEnabled(final Integer accountEnabled) {
		this.accountEnabled = accountEnabled;
	}

    /**
     * Return the value associated with the column: dateformat.
	 * @return A String object (this.dateformat)
	 */
	@Basic( optional = false )
	@Column( nullable = false, length = 30  )
	public String getDateformat() {
		return this.dateformat;
		
	}
	

  
    /**  
     * Set the value related to the column: dateformat.
	 * @param dateformat the dateformat value you wish to set
	 */
	public void setDateformat(final String dateformat) {
		this.dateformat = dateformat;
	}

    /**
     * Return the value associated with the column: dateformatExtended.
	 * @return A String object (this.dateformatExtended)
	 */
	@Basic( optional = false )
	@Column( name = "dateformat_extended", nullable = false, length = 30  )
	public String getDateformatExtended() {
		return this.dateformatExtended;
		
	}
	

  
    /**  
     * Set the value related to the column: dateformatExtended.
	 * @param dateformatExtended the dateformatExtended value you wish to set
	 */
	public void setDateformatExtended(final String dateformatExtended) {
		this.dateformatExtended = dateformatExtended;
	}

    /**
     * Return the value associated with the column: emailAddress.
	 * @return A String object (this.emailAddress)
	 */
	@Basic( optional = false )
	@Column( name = "email_address", nullable = false, length = 100  )
	public String getEmailAddress() {
		return this.emailAddress;
		
	}
	

  
    /**  
     * Set the value related to the column: emailAddress.
	 * @param emailAddress the emailAddress value you wish to set
	 */
	public void setEmailAddress(final String emailAddress) {
		this.emailAddress = emailAddress;
	}

    /**
     * Return the value associated with the column: id.
	 * @return A Integer object (this.id)
	 */
    @Id 
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Basic( optional = false )
	@Column( name = "user_id", nullable = false  )
	public Integer getId() {
		return this.id;
		
	}
	

  
    /**  
     * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final Integer id) {
		// If we've just been persisted and hashCode has been
		// returned then make sure other entities with this
		// ID return the already returned hash code
		if ( (this.id == null || this.id == 0) &&
				(id != null) &&
				(this.hashCode != null) ) {
		SAVED_HASHES.put( id, this.hashCode );
		}
		this.id = id;
	}

    /**
     * Return the value associated with the column: jabberId.
	 * @return A String object (this.jabberId)
	 */
	@Basic( optional = false )
	@Column( name = "jabber_id", nullable = false, length = 100  )
	public String getJabberId() {
		return this.jabberId;
		
	}
	

  
    /**  
     * Set the value related to the column: jabberId.
	 * @param jabberId the jabberId value you wish to set
	 */
	public void setJabberId(final String jabberId) {
		this.jabberId = jabberId;
	}

    /**
     * Return the value associated with the column: lockUntil.
	 * @return A Integer object (this.lockUntil)
	 */
	@Basic( optional = false )
	@Column( name = "lock_until", nullable = false  )
	public Integer getLockUntil() {
		return this.lockUntil;
		
	}
	

  
    /**  
     * Set the value related to the column: lockUntil.
	 * @param lockUntil the lockUntil value you wish to set
	 */
	public void setLockUntil(final Integer lockUntil) {
		this.lockUntil = lockUntil;
	}

    /**
     * Return the value associated with the column: loginAttempts.
	 * @return A Integer object (this.loginAttempts)
	 */
	@Basic( optional = false )
	@Column( name = "login_attempts", nullable = false  )
	public Integer getLoginAttempts() {
		return this.loginAttempts;
		
	}
	

  
    /**  
     * Set the value related to the column: loginAttempts.
	 * @param loginAttempts the loginAttempts value you wish to set
	 */
	public void setLoginAttempts(final Integer loginAttempts) {
		this.loginAttempts = loginAttempts;
	}

    /**
     * Return the value associated with the column: magicUrl.
	 * @return A String object (this.magicUrl)
	 */
	@Basic( optional = false )
	@Column( name = "magic_url", nullable = false, length = 40  )
	public String getMagicUrl() {
		return this.magicUrl;
		
	}
	

  
    /**  
     * Set the value related to the column: magicUrl.
	 * @param magicUrl the magicUrl value you wish to set
	 */
	public void setMagicUrl(final String magicUrl) {
		this.magicUrl = magicUrl;
	}

    /**
     * Return the value associated with the column: notifyOwn.
	 * @return A Integer object (this.notifyOwn)
	 */
	@Basic( optional = false )
	@Column( name = "notify_own", nullable = false  )
	public Integer getNotifyOwn() {
		return this.notifyOwn;
		
	}
	

  
    /**  
     * Set the value related to the column: notifyOwn.
	 * @param notifyOwn the notifyOwn value you wish to set
	 */
	public void setNotifyOwn(final Integer notifyOwn) {
		this.notifyOwn = notifyOwn;
	}

    /**
     * Return the value associated with the column: notifyType.
	 * @return A Integer object (this.notifyType)
	 */
	@Basic( optional = false )
	@Column( name = "notify_type", nullable = false  )
	public Integer getNotifyType() {
		return this.notifyType;
		
	}
	

  
    /**  
     * Set the value related to the column: notifyType.
	 * @param notifyType the notifyType value you wish to set
	 */
	public void setNotifyType(final Integer notifyType) {
		this.notifyType = notifyType;
	}

    /**
     * Return the value associated with the column: realName.
	 * @return A String object (this.realName)
	 */
	@Basic( optional = false )
	@Column( name = "real_name", nullable = false, length = 100  )
	public String getRealName() {
		return this.realName;
		
	}
	

  
    /**  
     * Set the value related to the column: realName.
	 * @param realName the realName value you wish to set
	 */
	public void setRealName(final String realName) {
		this.realName = realName;
	}

    /**
     * Return the value associated with the column: registerDate.
	 * @return A Integer object (this.registerDate)
	 */
	@Basic( optional = false )
	@Column( name = "register_date", nullable = false  )
	public Integer getRegisterDate() {
		return this.registerDate;
		
	}
	

  
    /**  
     * Set the value related to the column: registerDate.
	 * @param registerDate the registerDate value you wish to set
	 */
	public void setRegisterDate(final Integer registerDate) {
		this.registerDate = registerDate;
	}

    /**
     * Return the value associated with the column: tasksPerpage.
	 * @return A Integer object (this.tasksPerpage)
	 */
	@Basic( optional = false )
	@Column( name = "tasks_perpage", nullable = false  )
	public Integer getTasksPerpage() {
		return this.tasksPerpage;
		
	}
	

  
    /**  
     * Set the value related to the column: tasksPerpage.
	 * @param tasksPerpage the tasksPerpage value you wish to set
	 */
	public void setTasksPerpage(final Integer tasksPerpage) {
		this.tasksPerpage = tasksPerpage;
	}

    /**
     * Return the value associated with the column: timeZone.
	 * @return A Integer object (this.timeZone)
	 */
	@Basic( optional = false )
	@Column( name = "time_zone", nullable = false  )
	public Integer getTimeZone() {
		return this.timeZone;
		
	}
	

  
    /**  
     * Set the value related to the column: timeZone.
	 * @param timeZone the timeZone value you wish to set
	 */
	public void setTimeZone(final Integer timeZone) {
		this.timeZone = timeZone;
	}

    /**
     * Return the value associated with the column: trackerAdminRequests.
	 * @return A Set&lt;TrackerAdminRequests&gt; object (this.trackerAdminRequests)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "resolvedBy"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "user_id", nullable = false  )
	public Set<TrackerAdminRequests> getTrackerAdminRequestss() {
		return this.trackerAdminRequestss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerAdminRequests to the trackerAdminRequestss set.
	 * @param trackerAdminRequests item to add
	 */
	public void addTrackerAdminRequests(TrackerAdminRequests trackerAdminRequests) {
		trackerAdminRequests.setResolvedBy(this);
		this.trackerAdminRequestss.add(trackerAdminRequests);
	}

  
    /**  
     * Set the value related to the column: trackerAdminRequests.
	 * @param trackerAdminRequests the trackerAdminRequests value you wish to set
	 */
	public void setTrackerAdminRequestss(final Set<TrackerAdminRequests> trackerAdminRequests) {
		this.trackerAdminRequestss = trackerAdminRequests;
	}

    /**
     * Return the value associated with the column: trackerAssigned.
	 * @return A Set&lt;TrackerAssigned&gt; object (this.trackerAssigned)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "user"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "user_id", nullable = false  )
	public Set<TrackerAssigned> getTrackerAssigneds() {
		return this.trackerAssigneds;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerAssigned to the trackerAssigneds set.
	 * @param trackerAssigned item to add
	 */
	public void addTrackerAssigned(TrackerAssigned trackerAssigned) {
		trackerAssigned.setUser(this);
		this.trackerAssigneds.add(trackerAssigned);
	}

  
    /**  
     * Set the value related to the column: trackerAssigned.
	 * @param trackerAssigned the trackerAssigned value you wish to set
	 */
	public void setTrackerAssigneds(final Set<TrackerAssigned> trackerAssigned) {
		this.trackerAssigneds = trackerAssigned;
	}

    /**
     * Return the value associated with the column: trackerAttachments.
	 * @return A Set&lt;TrackerAttachments&gt; object (this.trackerAttachments)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "addedBy"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "user_id", nullable = false  )
	public Set<TrackerAttachments> getTrackerAttachmentss() {
		return this.trackerAttachmentss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerAttachments to the trackerAttachmentss set.
	 * @param trackerAttachments item to add
	 */
	public void addTrackerAttachments(TrackerAttachments trackerAttachments) {
		trackerAttachments.setAddedBy(this);
		this.trackerAttachmentss.add(trackerAttachments);
	}

  
    /**  
     * Set the value related to the column: trackerAttachments.
	 * @param trackerAttachments the trackerAttachments value you wish to set
	 */
	public void setTrackerAttachmentss(final Set<TrackerAttachments> trackerAttachments) {
		this.trackerAttachmentss = trackerAttachments;
	}

    /**
     * Return the value associated with the column: trackerComments.
	 * @return A Set&lt;TrackerComments&gt; object (this.trackerComments)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "user"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "user_id", nullable = false  )
	public Set<TrackerComments> getTrackerCommentss() {
		return this.trackerCommentss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerComments to the trackerCommentss set.
	 * @param trackerComments item to add
	 */
	public void addTrackerComments(TrackerComments trackerComments) {
		trackerComments.setUser(this);
		this.trackerCommentss.add(trackerComments);
	}

  
    /**  
     * Set the value related to the column: trackerComments.
	 * @param trackerComments the trackerComments value you wish to set
	 */
	public void setTrackerCommentss(final Set<TrackerComments> trackerComments) {
		this.trackerCommentss = trackerComments;
	}

    /**
     * Return the value associated with the column: trackerHistory.
	 * @return A Set&lt;TrackerHistory&gt; object (this.trackerHistory)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "user"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "user_id", nullable = false  )
	public Set<TrackerHistory> getTrackerHistories() {
		return this.trackerHistories;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerHistory to the trackerHistories set.
	 * @param trackerHistory item to add
	 */
	public void addTrackerHistory(TrackerHistory trackerHistory) {
		trackerHistory.setUser(this);
		this.trackerHistories.add(trackerHistory);
	}

  
    /**  
     * Set the value related to the column: trackerHistory.
	 * @param trackerHistory the trackerHistory value you wish to set
	 */
	public void setTrackerHistories(final Set<TrackerHistory> trackerHistory) {
		this.trackerHistories = trackerHistory;
	}

    /**
     * Return the value associated with the column: trackerListCategory.
	 * @return A Set&lt;TrackerListCategory&gt; object (this.trackerListCategory)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "categoryOwner"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "user_id", nullable = false  )
	public Set<TrackerListCategory> getTrackerListCategories() {
		return this.trackerListCategories;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerListCategory to the trackerListCategories set.
	 * @param trackerListCategory item to add
	 */
	public void addTrackerListCategory(TrackerListCategory trackerListCategory) {
		trackerListCategory.setCategoryOwner(this);
		this.trackerListCategories.add(trackerListCategory);
	}

  
    /**  
     * Set the value related to the column: trackerListCategory.
	 * @param trackerListCategory the trackerListCategory value you wish to set
	 */
	public void setTrackerListCategories(final Set<TrackerListCategory> trackerListCategory) {
		this.trackerListCategories = trackerListCategory;
	}

    /**
     * Return the value associated with the column: trackerNotifications.
	 * @return A Set&lt;TrackerNotifications&gt; object (this.trackerNotifications)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "user"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "user_id", nullable = false  )
	public Set<TrackerNotifications> getTrackerNotificationss() {
		return this.trackerNotificationss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerNotifications to the trackerNotificationss set.
	 * @param trackerNotifications item to add
	 */
	public void addTrackerNotifications(TrackerNotifications trackerNotifications) {
		trackerNotifications.setUser(this);
		this.trackerNotificationss.add(trackerNotifications);
	}

  
    /**  
     * Set the value related to the column: trackerNotifications.
	 * @param trackerNotifications the trackerNotifications value you wish to set
	 */
	public void setTrackerNotificationss(final Set<TrackerNotifications> trackerNotifications) {
		this.trackerNotificationss = trackerNotifications;
	}

    /**
     * Return the value associated with the column: trackerProjects.
	 * @return A Set&lt;TrackerProjects&gt; object (this.trackerProjects)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "defaultCatOwner"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "user_id", nullable = false  )
	public Set<TrackerProjects> getTrackerProjectss() {
		return this.trackerProjectss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerProjects to the trackerProjectss set.
	 * @param trackerProjects item to add
	 */
	public void addTrackerProjects(TrackerProjects trackerProjects) {
		trackerProjects.setDefaultCatOwner(this);
		this.trackerProjectss.add(trackerProjects);
	}

  
    /**  
     * Set the value related to the column: trackerProjects.
	 * @param trackerProjects the trackerProjects value you wish to set
	 */
	public void setTrackerProjectss(final Set<TrackerProjects> trackerProjects) {
		this.trackerProjectss = trackerProjects;
	}

    /**
     * Return the value associated with the column: trackerReminders.
	 * @return A Set&lt;TrackerReminders&gt; object (this.trackerReminders)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "fromUser"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "user_id", nullable = false  )
	public Set<TrackerReminders> getTrackerReminderss() {
		return this.trackerReminderss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerReminders to the trackerReminderss set.
	 * @param trackerReminders item to add
	 */
	public void addTrackerReminders(TrackerReminders trackerReminders) {
		trackerReminders.setFromUser(this);
		this.trackerReminderss.add(trackerReminders);
	}

  
    /**  
     * Set the value related to the column: trackerReminders.
	 * @param trackerReminders the trackerReminders value you wish to set
	 */
	public void setTrackerReminderss(final Set<TrackerReminders> trackerReminders) {
		this.trackerReminderss = trackerReminders;
	}

    /**
     * Return the value associated with the column: trackerSearches.
	 * @return A Set&lt;TrackerSearches&gt; object (this.trackerSearches)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "user"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "user_id", nullable = false  )
	public Set<TrackerSearches> getTrackerSearcheses() {
		return this.trackerSearcheses;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerSearches to the trackerSearcheses set.
	 * @param trackerSearches item to add
	 */
	public void addTrackerSearches(TrackerSearches trackerSearches) {
		trackerSearches.setUser(this);
		this.trackerSearcheses.add(trackerSearches);
	}

  
    /**  
     * Set the value related to the column: trackerSearches.
	 * @param trackerSearches the trackerSearches value you wish to set
	 */
	public void setTrackerSearcheses(final Set<TrackerSearches> trackerSearches) {
		this.trackerSearcheses = trackerSearches;
	}

    /**
     * Return the value associated with the column: trackerTasks.
	 * @return A Set&lt;TrackerTasks&gt; object (this.trackerTasks)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "closedBy"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "user_id", nullable = false  )
	public Set<TrackerTasks> getTrackerTaskss() {
		return this.trackerTaskss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerTasks to the trackerTaskss set.
	 * @param trackerTasks item to add
	 */
	public void addTrackerTasks(TrackerTasks trackerTasks) {
		trackerTasks.setClosedBy(this);
		this.trackerTaskss.add(trackerTasks);
	}

  
    /**  
     * Set the value related to the column: trackerTasks.
	 * @param trackerTasks the trackerTasks value you wish to set
	 */
	public void setTrackerTaskss(final Set<TrackerTasks> trackerTasks) {
		this.trackerTaskss = trackerTasks;
	}

    /**
     * Return the value associated with the column: trackerUsersInGroups.
	 * @return A Set&lt;TrackerUsersInGroups&gt; object (this.trackerUsersInGroups)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "user"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "user_id", nullable = false  )
	public Set<TrackerUsersInGroups> getTrackerUsersInGroupss() {
		return this.trackerUsersInGroupss;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerUsersInGroups to the trackerUsersInGroupss set.
	 * @param trackerUsersInGroups item to add
	 */
	public void addTrackerUsersInGroups(TrackerUsersInGroups trackerUsersInGroups) {
		trackerUsersInGroups.setUser(this);
		this.trackerUsersInGroupss.add(trackerUsersInGroups);
	}

  
    /**  
     * Set the value related to the column: trackerUsersInGroups.
	 * @param trackerUsersInGroups the trackerUsersInGroups value you wish to set
	 */
	public void setTrackerUsersInGroupss(final Set<TrackerUsersInGroups> trackerUsersInGroups) {
		this.trackerUsersInGroupss = trackerUsersInGroups;
	}

    /**
     * Return the value associated with the column: trackerVotes.
	 * @return A Set&lt;TrackerVotes&gt; object (this.trackerVotes)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "user"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "user_id", nullable = false  )
	public Set<TrackerVotes> getTrackerVoteses() {
		return this.trackerVoteses;
		
	}
	
	/**
	 * Adds a bi-directional link of type TrackerVotes to the trackerVoteses set.
	 * @param trackerVotes item to add
	 */
	public void addTrackerVotes(TrackerVotes trackerVotes) {
		trackerVotes.setUser(this);
		this.trackerVoteses.add(trackerVotes);
	}

  
    /**  
     * Set the value related to the column: trackerVotes.
	 * @param trackerVotes the trackerVotes value you wish to set
	 */
	public void setTrackerVoteses(final Set<TrackerVotes> trackerVotes) {
		this.trackerVoteses = trackerVotes;
	}

    /**
     * Return the value associated with the column: userName.
	 * @return A String object (this.userName)
	 */
	@Basic( optional = false )
	@Column( name = "user_name", nullable = false, length = 32  )
	public String getUserName() {
		return this.userName;
		
	}
	

  
    /**  
     * Set the value related to the column: userName.
	 * @param userName the userName value you wish to set
	 */
	public void setUserName(final String userName) {
		this.userName = userName;
	}

    /**
     * Return the value associated with the column: userPass.
	 * @return A String object (this.userPass)
	 */
	@Basic( optional = true )
	@Column( name = "user_pass", length = 40  )
	public String getUserPass() {
		return this.userPass;
		
	}
	

  
    /**  
     * Set the value related to the column: userPass.
	 * @param userPass the userPass value you wish to set
	 */
	public void setUserPass(final String userPass) {
		this.userPass = userPass;
	}

    /**
     * Return the value associated with the column: version.
	 * @return A Integer object (this.version)
	 */
	@Basic( optional = false )
	@Column( nullable = false  )
	public Integer getVersion() {
		return this.version;
		
	}
	

  
    /**  
     * Set the value related to the column: version.
	 * @param version the version value you wish to set
	 */
	public void setVersion(final Integer version) {
		this.version = version;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public TrackerUsers clone() throws CloneNotSupportedException {
		
        final TrackerUsers copy = (TrackerUsers)super.clone();

		copy.setAccountEnabled(this.getAccountEnabled());
		copy.setDateformat(this.getDateformat());
		copy.setDateformatExtended(this.getDateformatExtended());
		copy.setEmailAddress(this.getEmailAddress());
		copy.setId(this.getId());
		copy.setJabberId(this.getJabberId());
		copy.setLockUntil(this.getLockUntil());
		copy.setLoginAttempts(this.getLoginAttempts());
		copy.setMagicUrl(this.getMagicUrl());
		copy.setNotifyOwn(this.getNotifyOwn());
		copy.setNotifyType(this.getNotifyType());
		copy.setRealName(this.getRealName());
		copy.setRegisterDate(this.getRegisterDate());
		copy.setTasksPerpage(this.getTasksPerpage());
		copy.setTimeZone(this.getTimeZone());
		if (this.getTrackerAdminRequestss() != null) {
			copy.getTrackerAdminRequestss().addAll(this.getTrackerAdminRequestss());
		}
		if (this.getTrackerAssigneds() != null) {
			copy.getTrackerAssigneds().addAll(this.getTrackerAssigneds());
		}
		if (this.getTrackerAttachmentss() != null) {
			copy.getTrackerAttachmentss().addAll(this.getTrackerAttachmentss());
		}
		if (this.getTrackerCommentss() != null) {
			copy.getTrackerCommentss().addAll(this.getTrackerCommentss());
		}
		if (this.getTrackerHistories() != null) {
			copy.getTrackerHistories().addAll(this.getTrackerHistories());
		}
		if (this.getTrackerListCategories() != null) {
			copy.getTrackerListCategories().addAll(this.getTrackerListCategories());
		}
		if (this.getTrackerNotificationss() != null) {
			copy.getTrackerNotificationss().addAll(this.getTrackerNotificationss());
		}
		if (this.getTrackerProjectss() != null) {
			copy.getTrackerProjectss().addAll(this.getTrackerProjectss());
		}
		if (this.getTrackerReminderss() != null) {
			copy.getTrackerReminderss().addAll(this.getTrackerReminderss());
		}
		if (this.getTrackerSearcheses() != null) {
			copy.getTrackerSearcheses().addAll(this.getTrackerSearcheses());
		}
		if (this.getTrackerTaskss() != null) {
			copy.getTrackerTaskss().addAll(this.getTrackerTaskss());
		}
		if (this.getTrackerUsersInGroupss() != null) {
			copy.getTrackerUsersInGroupss().addAll(this.getTrackerUsersInGroupss());
		}
		if (this.getTrackerVoteses() != null) {
			copy.getTrackerVoteses().addAll(this.getTrackerVoteses());
		}
		copy.setUserName(this.getUserName());
		copy.setUserPass(this.getUserPass());
		copy.setVersion(this.getVersion());
		return copy;
	}
	


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("accountEnabled: " + this.getAccountEnabled() + ", ");
		sb.append("dateformat: " + this.getDateformat() + ", ");
		sb.append("dateformatExtended: " + this.getDateformatExtended() + ", ");
		sb.append("emailAddress: " + this.getEmailAddress() + ", ");
		sb.append("id: " + this.getId() + ", ");
		sb.append("jabberId: " + this.getJabberId() + ", ");
		sb.append("lockUntil: " + this.getLockUntil() + ", ");
		sb.append("loginAttempts: " + this.getLoginAttempts() + ", ");
		sb.append("magicUrl: " + this.getMagicUrl() + ", ");
		sb.append("notifyOwn: " + this.getNotifyOwn() + ", ");
		sb.append("notifyType: " + this.getNotifyType() + ", ");
		sb.append("realName: " + this.getRealName() + ", ");
		sb.append("registerDate: " + this.getRegisterDate() + ", ");
		sb.append("tasksPerpage: " + this.getTasksPerpage() + ", ");
		sb.append("timeZone: " + this.getTimeZone() + ", ");
		sb.append("userName: " + this.getUserName() + ", ");
		sb.append("userPass: " + this.getUserPass() + ", ");
		sb.append("version: " + this.getVersion());
		return sb.toString();		
	}


	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		Object proxyThat = aThat;
		
		if ( this == aThat ) {
			 return true;
		}

		
		if (aThat instanceof HibernateProxy) {
 			// narrow down the proxy to the class we are dealing with.
 			try {
				proxyThat = ((HibernateProxy) aThat).getHibernateLazyInitializer().getImplementation(); 
			} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		   	}
		}
		if (aThat == null)  {
			 return false;
		}
		
		final TrackerUsers that; 
		try {
			that = (TrackerUsers) proxyThat;
			if ( !(that.getClassType().equals(this.getClassType()))){
				return false;
			}
		} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		} catch (ClassCastException e) {
				return false;
		}
		
		
		boolean result = true;
		result = result && (((this.getId() == null) && ( that.getId() == null)) || (this.getId() != null  && this.getId().equals(that.getId())));
		result = result && (((getAccountEnabled() == null) && (that.getAccountEnabled() == null)) || (getAccountEnabled() != null && getAccountEnabled().equals(that.getAccountEnabled())));
		result = result && (((getDateformat() == null) && (that.getDateformat() == null)) || (getDateformat() != null && getDateformat().equals(that.getDateformat())));
		result = result && (((getDateformatExtended() == null) && (that.getDateformatExtended() == null)) || (getDateformatExtended() != null && getDateformatExtended().equals(that.getDateformatExtended())));
		result = result && (((getEmailAddress() == null) && (that.getEmailAddress() == null)) || (getEmailAddress() != null && getEmailAddress().equals(that.getEmailAddress())));
		result = result && (((getJabberId() == null) && (that.getJabberId() == null)) || (getJabberId() != null && getJabberId().equals(that.getJabberId())));
		result = result && (((getLockUntil() == null) && (that.getLockUntil() == null)) || (getLockUntil() != null && getLockUntil().equals(that.getLockUntil())));
		result = result && (((getLoginAttempts() == null) && (that.getLoginAttempts() == null)) || (getLoginAttempts() != null && getLoginAttempts().equals(that.getLoginAttempts())));
		result = result && (((getMagicUrl() == null) && (that.getMagicUrl() == null)) || (getMagicUrl() != null && getMagicUrl().equals(that.getMagicUrl())));
		result = result && (((getNotifyOwn() == null) && (that.getNotifyOwn() == null)) || (getNotifyOwn() != null && getNotifyOwn().equals(that.getNotifyOwn())));
		result = result && (((getNotifyType() == null) && (that.getNotifyType() == null)) || (getNotifyType() != null && getNotifyType().equals(that.getNotifyType())));
		result = result && (((getRealName() == null) && (that.getRealName() == null)) || (getRealName() != null && getRealName().equals(that.getRealName())));
		result = result && (((getRegisterDate() == null) && (that.getRegisterDate() == null)) || (getRegisterDate() != null && getRegisterDate().equals(that.getRegisterDate())));
		result = result && (((getTasksPerpage() == null) && (that.getTasksPerpage() == null)) || (getTasksPerpage() != null && getTasksPerpage().equals(that.getTasksPerpage())));
		result = result && (((getTimeZone() == null) && (that.getTimeZone() == null)) || (getTimeZone() != null && getTimeZone().equals(that.getTimeZone())));
		result = result && (((getUserName() == null) && (that.getUserName() == null)) || (getUserName() != null && getUserName().equals(that.getUserName())));
		result = result && (((getUserPass() == null) && (that.getUserPass() == null)) || (getUserPass() != null && getUserPass().equals(that.getUserPass())));
		result = result && (((getVersion() == null) && (that.getVersion() == null)) || (getVersion() != null && getVersion().equals(that.getVersion())));
		return result;
	}
	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		if ( this.hashCode == null ) {
			synchronized ( this ) {
				if ( this.hashCode == null ) {
					Integer newHashCode = null;

					if ( getId() != null ) {
					newHashCode = SAVED_HASHES.get( getId() );
					}
					
					if ( newHashCode == null ) {
						if ( getId() != null && getId() != 0) {
							newHashCode = getId();
						} else {

						}
					}
					
					this.hashCode = newHashCode;
				}
			}
		}
	return this.hashCode;
	}
	

	
}
